// <auto-generated />
using System;
using ERP_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200613155250_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERP_API.Models.AttachedFil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("RelationNum")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AttachedFil");
                });

            modelBuilder.Entity("ERP_API.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("品牌编号")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("varchar(500)")
                        .HasComment("公司")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("EnglishName")
                        .HasColumnType("varchar(50)")
                        .HasComment("品牌英文名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("品牌全程")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("LogoUrl")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("品牌名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProductPlace")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Py")
                        .HasColumnName("PY")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WebSite")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("BranchId", "FullName")
                        .IsUnique()
                        .HasName("IX_Brand");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("ERP_API.Models.CanvassAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AgreementContent")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CanvassAgreement");
                });

            modelBuilder.Entity("ERP_API.Models.CatagoryParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ItypeCode")
                        .HasColumnName("ITypeCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ParamsName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("PlatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UserBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CatagoryParams");
                });

            modelBuilder.Entity("ERP_API.Models.CrawlerRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<int>("DataSource")
                        .HasColumnType("int");

                    b.Property<int>("FailNum")
                        .HasColumnType("int");

                    b.Property<bool>("IsGrabGroup")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("SuccessNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CrawlerRequest");
                });

            modelBuilder.Entity("ERP_API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Area")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<int>("BalanceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("City")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ConfirmLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((5))")
                        .HasComment("审核下单level");

                    b.Property<int>("Credit")
                        .HasColumnType("int")
                        .HasComment("信用额度");

                    b.Property<int>("CreditDays")
                        .HasColumnType("int")
                        .HasComment("账期");

                    b.Property<string>("EmailForInvoice")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("EmployeesNum")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceAddress")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceBank")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceCategory")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('纸质发票')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceContent")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceMemo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("InvoicePhone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceTaxNo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("增票，普票，收据，无需发票")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBudget")
                        .HasColumnType("bit")
                        .HasComment("是否启用预算管理");

                    b.Property<bool>("IsBuyOutCounter")
                        .HasColumnType("bit")
                        .HasComment("是否可以买专柜以外的商品");

                    b.Property<bool>("IsComfirmOrder")
                        .HasColumnType("bit")
                        .HasComment("是否启用审核下单");

                    b.Property<bool>("IsCounter")
                        .HasColumnType("bit")
                        .HasComment("是否启用专柜");

                    b.Property<bool?>("IsDisable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsMultiAccount")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("是否启用多账号");

                    b.Property<bool>("IsOrdering")
                        .HasColumnType("bit")
                        .HasComment("1:开启连续下单状态");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStoreManager")
                        .HasColumnType("bit")
                        .HasComment("是否启用库存管理");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((3))")
                        .HasComment("客户级别：1-5,5最高");

                    b.Property<bool?>("LimitOrderByBalance")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("OnlyServiceOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("OnlyStatementManCheck")
                        .HasColumnType("bit");

                    b.Property<int>("OrderDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))")
                        .HasComment("默认的折扣，对专柜也有效！");

                    b.Property<string>("OrderMemo")
                        .HasColumnType("varchar(200)")
                        .HasComment("开单特殊说明")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("OrderPrintNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))")
                        .HasComment("订单打印份数");

                    b.Property<string>("PayMethod")
                        .HasColumnType("varchar(50)")
                        .HasComment("支票，现金，电汇，其它")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PayType")
                        .HasColumnType("varchar(50)")
                        .HasComment("现结，月结")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PostCode")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("PrintTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Py")
                        .HasColumnName("PY")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("RegisterMethod")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("SalesId")
                        .HasColumnType("int")
                        .HasComment("默认销售员");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasComment("客服");

                    b.Property<string>("ShortName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("StatementManId")
                        .HasColumnType("int")
                        .HasComment("对账员");

                    b.Property<string>("StatementMemo")
                        .HasColumnType("varchar(200)")
                        .HasComment("对账备注")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StoreMemo")
                        .HasColumnType("varchar(200)")
                        .HasComment("理货特殊说明")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Telphone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("WinformDeliveryTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId", "Name")
                        .IsUnique()
                        .HasName("IX_Customer");

                    b.HasIndex("Id", "Name", "Type", "Status", "EmployeesNum", "Telphone", "SalesId", "PayMethod", "CreditDays", "BranchId", "PayType")
                        .HasName("<Name of Missing Index, sysname,>");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ERP_API.Models.CustomerBalanceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("金额");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("租户编号");

                    b.Property<decimal>("Change")
                        .HasColumnType("money")
                        .HasComment("变更值");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<int>("CreationId")
                        .HasColumnType("int")
                        .HasComment("创建人");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasComment("客户编号");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("客户名称")
                        .HasMaxLength(200);

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasComment("部门编号");

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("部门名称")
                        .HasMaxLength(200);

                    b.Property<int>("Direction")
                        .HasColumnType("int")
                        .HasComment("1、增加 2、减少");

                    b.Property<int?>("RelationId")
                        .HasColumnType("int")
                        .HasComment("关联订单编号");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("备注")
                        .HasMaxLength(200);

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasComment("联系人编号");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("联系人名称")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CreateDate")
                        .HasName("CreateDate");

                    b.HasIndex("CustomerId")
                        .HasName("CustomerId");

                    b.HasIndex("CustomerName")
                        .HasName("CustomerName");

                    b.HasIndex("DeptId")
                        .HasName("DeptId");

                    b.HasIndex("RelationId")
                        .HasName("RelationId");

                    b.HasIndex("UserId")
                        .HasName("UserId");

                    b.ToTable("CustomerBalanceLog");

                    b.HasComment("客户余额日志");
                });

            modelBuilder.Entity("ERP_API.Models.CustomerInvoiceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceAccount")
                        .HasColumnType("varchar(100)")
                        .HasComment("开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceAddress")
                        .HasColumnType("varchar(500)")
                        .HasComment("地址")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceBank")
                        .HasColumnType("varchar(100)")
                        .HasComment("开户行")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceMemo")
                        .HasColumnType("varchar(500)")
                        .HasComment("发票备注")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("InvoicePhone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceTaxNo")
                        .HasColumnType("varchar(50)")
                        .HasComment("税号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('0')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CustomerInvoiceInfo");
                });

            modelBuilder.Entity("ERP_API.Models.CustomerLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime")
                        .HasComment("添加时间");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("操作类别")
                        .HasMaxLength(50);

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Operate")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("操作")
                        .HasMaxLength(200);

                    b.Property<string>("Tracking")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("修改详细信息，扩展字段");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("操作人Id(Sys_Users)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("操作人名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CustomerLog");
                });

            modelBuilder.Entity("ERP_API.Models.CustomerPreReceiveMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActualPayTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money")
                        .HasComment("余额");

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasComment("客户Id");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("客户名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("money")
                        .HasComment("期初金额");

                    b.Property<string>("Memo")
                        .HasColumnType("text")
                        .HasComment("备注");

                    b.Property<string>("Operate")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("操作(预收、收款、撤销)")
                        .HasMaxLength(10);

                    b.Property<int>("OperatorId")
                        .HasColumnType("int")
                        .HasComment("操作人Id");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("操作人名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("OrderStatementId")
                        .HasColumnType("int")
                        .HasComment("对账单Id");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("PreReceiveMoney")
                        .HasColumnType("money")
                        .HasComment("预收金额");

                    b.Property<string>("ReceiveAccount")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("ReceiveMoney")
                        .HasColumnType("money")
                        .HasComment("收款金额");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("CustomerPreReceiveMoney");
                });

            modelBuilder.Entity("ERP_API.Models.CustomerSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("别名")
                        .HasMaxLength(200);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasComment("客户编号");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("图片")
                        .HasMaxLength(2000);

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("Logo")
                        .HasMaxLength(2000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称")
                        .HasMaxLength(200);

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.HasKey("Id");

                    b.ToTable("CustomerSetting");

                    b.HasComment("重要客户自定义设置");
                });

            modelBuilder.Entity("ERP_API.Models.DefaultStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("OrderType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Place")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("('0')");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("DefaultStore");
                });

            modelBuilder.Entity("ERP_API.Models.DeliveryLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LineRange")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId", "LineName")
                        .IsUnique()
                        .HasName("IX_DeliveryLine");

                    b.ToTable("DeliveryLine");
                });

            modelBuilder.Entity("ERP_API.Models.DeliveryLineCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Distance")
                        .HasColumnType("int")
                        .HasComment("配送距离（公里）");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DeliveryLineCustomer");
                });

            modelBuilder.Entity("ERP_API.Models.DeliveryLineMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Distance")
                        .HasColumnType("int")
                        .HasComment("配送距离（公里）");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DeliveryLineMember");
                });

            modelBuilder.Entity("ERP_API.Models.DellOrderGoodsPo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("GoodsNum")
                        .HasColumnType("int");

                    b.Property<decimal?>("GoodsPrice")
                        .HasColumnType("money");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Po")
                        .HasColumnName("PO")
                        .HasColumnType("varchar(50)")
                        .HasComment("生成的传给戴尔的订单号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("状态")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DellOrderGoodsPo");
                });

            modelBuilder.Entity("ERP_API.Models.Dept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSepareOrder")
                        .HasColumnType("bit")
                        .HasComment("是否独立下单");

                    b.Property<bool>("IsSepareSettle")
                        .HasColumnType("bit")
                        .HasComment("是否独立结算");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .HasColumnName("PCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Dept");
                });

            modelBuilder.Entity("ERP_API.Models.DeptTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSepareOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSepareSettle")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .HasColumnName("PCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("DeptTemp");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionCustomerInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("开票方，即销方");

                    b.Property<string>("BuyerAddress")
                        .HasColumnType("varchar(80)")
                        .HasComment("购方地址")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBank")
                        .HasColumnType("varchar(200)")
                        .HasComment("购方开户行")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasComment("购方开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("购方名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("BuyerPhone")
                        .HasColumnType("varchar(20)")
                        .HasComment("购方电话")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("BuyerTaxNo")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("购方税号")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money")
                        .HasComment("销账金额");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasComment("客户编号");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("客户名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("DeliveryType")
                        .HasColumnType("int")
                        .HasComment("配送方式");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasComment("联系人邮箱")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票代码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime")
                        .HasComment("开票日期");

                    b.Property<decimal>("InvoiceMoney")
                        .HasColumnType("money")
                        .HasComment("开票金额");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票号码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int")
                        .HasComment("发票类型");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LinkMan")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("联系人名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("LinkManId")
                        .HasColumnType("int")
                        .HasComment("联系人编号");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(1000)")
                        .HasComment("开票备注")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(20)")
                        .HasComment("联系人手机号")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SaleAddress")
                        .HasColumnType("varchar(80)")
                        .HasComment("销方地址")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("SaleBank")
                        .HasColumnType("varchar(200)")
                        .HasComment("销方开户行")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SaleBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasComment("销方开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SaleName")
                        .HasColumnType("varchar(200)")
                        .HasComment("销方名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SalePhone")
                        .HasColumnType("varchar(20)")
                        .HasComment("销方电话")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SaleTaxNo")
                        .HasColumnType("varchar(20)")
                        .HasComment("销方税号")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("StatementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("开票操作时间");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("开票操作人");

                    b.HasKey("Id");

                    b.ToTable("DistributionCustomerInvoice");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionCustomerInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("金额");

                    b.Property<decimal>("ChargeOffAmount")
                        .HasColumnType("money");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int")
                        .HasComment("商品编号");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int")
                        .HasComment("DistributionCustomerInvoice表Id");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int")
                        .HasComment("数量");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("订单编号");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("单价");

                    b.Property<string>("TaxCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("商品税收编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("money")
                        .HasComment("税率");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DistributionCustomerInvoiceDetail");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionCustomerReceiveMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("收款方");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money")
                        .HasComment("销账金额，与订单的销账金额相等");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasComment("付款方");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("付款方名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("收款备注")
                        .HasMaxLength(500);

                    b.Property<string>("Operate")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("操作类型")
                        .HasMaxLength(20);

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("支付方式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ReceiveAccount")
                        .HasColumnType("int")
                        .HasComment("付款账户，Sys_BranchBankInfo的编号");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("datetime")
                        .HasComment("收款日期");

                    b.Property<decimal>("ReceiveMoney")
                        .HasColumnType("money")
                        .HasComment("实际收款金额");

                    b.Property<int>("StatementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("收款操作人");

                    b.HasKey("Id");

                    b.ToTable("DistributionCustomerReceiveMoney");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionCustomerReceiveMoneyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("明细实收金额");

                    b.Property<decimal>("ChargeOffAmount")
                        .HasColumnType("money")
                        .HasComment("明细销账金额");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ReceiveMoneyId")
                        .HasColumnType("int")
                        .HasComment("分销订单收款记录表Id");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DistributionCustomerReceiveMoneyDetail");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("开票方，即销方");

                    b.Property<string>("BuyerAddress")
                        .HasColumnType("varchar(80)")
                        .HasComment("购方地址")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBank")
                        .HasColumnType("varchar(200)")
                        .HasComment("购方开户行")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasComment("购方开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("购方名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("BuyerPhone")
                        .HasColumnType("varchar(20)")
                        .HasComment("购方电话")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("BuyerTaxNo")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("购方税号")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money")
                        .HasComment("销账金额");

                    b.Property<int>("DeliveryType")
                        .HasColumnType("int")
                        .HasComment("配送方式");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasComment("联系人邮箱")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票代码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime")
                        .HasComment("开票日期");

                    b.Property<decimal>("InvoiceMoney")
                        .HasColumnType("money")
                        .HasComment("开票金额");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票号码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int")
                        .HasComment("发票类型");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LinkMan")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("联系人名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("LinkManId")
                        .HasColumnType("int")
                        .HasComment("联系人编号");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(1000)")
                        .HasComment("开票备注")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(20)")
                        .HasComment("联系人手机号")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("PbranchId")
                        .HasColumnName("PBranchId")
                        .HasColumnType("int")
                        .HasComment("收票方，即上级公司/购方");

                    b.Property<string>("SaleAddress")
                        .HasColumnType("varchar(80)")
                        .HasComment("销方地址")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("SaleBank")
                        .HasColumnType("varchar(200)")
                        .HasComment("销方开户行")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SaleBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasComment("销方开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SaleName")
                        .HasColumnType("varchar(200)")
                        .HasComment("销方名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SalePhone")
                        .HasColumnType("varchar(20)")
                        .HasComment("销方电话")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SaleTaxNo")
                        .HasColumnType("varchar(20)")
                        .HasComment("销方税号")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("StatementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("开票操作时间");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("开票操作人");

                    b.HasKey("Id");

                    b.ToTable("DistributionInvoice");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("金额");

                    b.Property<decimal>("ChargeOffAmount")
                        .HasColumnType("money");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int")
                        .HasComment("商品编号");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int")
                        .HasComment("DistributionInvoice表Id");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int")
                        .HasComment("数量");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("订单编号");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("单价");

                    b.Property<string>("TaxCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("商品税收编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("money")
                        .HasComment("税率");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DistributionInvoiceDetail");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("IsArrived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPicked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DistributionOperation");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionOrderState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AllocationTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ArriveTime")
                        .HasColumnType("datetime");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("InvoiceChargeOff")
                        .HasColumnType("money");

                    b.Property<int>("InvoiceStatus")
                        .HasColumnType("int")
                        .HasComment("收票状态：0:未收票；1：已收票；2：部分收票");

                    b.Property<bool>("IsArrived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConverted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLocked")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsPicked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PickTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PrintTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ReceiveChargeOff")
                        .HasColumnType("money");

                    b.Property<int>("ReceiveMoneyStatus")
                        .HasColumnType("int")
                        .HasComment("收款状态：0:未收款；1：已收款；2：部分收款");

                    b.Property<DateTime?>("ServiceResponseTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("DistributionOrderState");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionPay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("付款方");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money")
                        .HasComment("销账金额，与订单的销账金额相等");

                    b.Property<int>("ChildBranchId")
                        .HasColumnType("int")
                        .HasComment("收款方");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("付款备注")
                        .HasMaxLength(500);

                    b.Property<int?>("PayAccount")
                        .HasColumnType("int")
                        .HasComment("付款账号");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime")
                        .HasComment("付款日期");

                    b.Property<decimal>("PayMoney")
                        .HasColumnType("money")
                        .HasComment("实际收款金额");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("支付方式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("StatementId")
                        .HasColumnType("int")
                        .HasComment("对账单号");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("操作时间");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("操作人");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("IX_BranchId");

                    b.HasIndex("ChildBranchId")
                        .HasName("IX_ChildBranchId");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("DistributionPay");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionPayDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("明细实收金额");

                    b.Property<decimal>("ChargeOffAmount")
                        .HasColumnType("money")
                        .HasComment("销账金额");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int")
                        .HasComment("商品Id");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<int>("Num")
                        .HasColumnType("int")
                        .HasComment("数量");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("订单Id");

                    b.Property<int>("PayId")
                        .HasColumnType("int")
                        .HasComment("FK");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("单价");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("操作时间");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId")
                        .HasName("IX_GoodsId");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderId");

                    b.HasIndex("PayId")
                        .HasName("IX_PayId");

                    b.ToTable("DistributionPayDetail");

                    b.HasComment("分销收款明细");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionReceiveInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("购方");

                    b.Property<string>("BuyerAddress")
                        .HasColumnType("varchar(80)")
                        .HasComment("购方地址")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBank")
                        .HasColumnType("varchar(200)")
                        .HasComment("购方开户行")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasComment("购方开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("购方名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("BuyerPhone")
                        .HasColumnType("varchar(20)")
                        .HasComment("购方电话")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("BuyerTaxNo")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("购方税号")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money")
                        .HasComment("销账金额");

                    b.Property<int>("ChildBranchId")
                        .HasColumnType("int")
                        .HasComment("销方，即下一级公司");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票代码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime")
                        .HasComment("开票日期");

                    b.Property<decimal>("InvoiceMoney")
                        .HasColumnType("money")
                        .HasComment("开票金额");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票号码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int")
                        .HasComment("发票类型");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(1000)")
                        .HasComment("开票备注")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("datetime")
                        .HasComment("收票日期");

                    b.Property<string>("SaleAddress")
                        .HasColumnType("varchar(80)")
                        .HasComment("销方地址")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("SaleBank")
                        .HasColumnType("varchar(200)")
                        .HasComment("销方开户行")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SaleBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasComment("销方开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SaleName")
                        .HasColumnType("varchar(200)")
                        .HasComment("销方名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SalePhone")
                        .HasColumnType("varchar(20)")
                        .HasComment("销方电话")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SaleTaxNo")
                        .HasColumnType("varchar(20)")
                        .HasComment("销方税号")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("StatementId")
                        .HasColumnType("int")
                        .HasComment("对账单Id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("收票操作时间");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("开票操作人");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("IX_BranchId");

                    b.HasIndex("ChildBranchId")
                        .HasName("IX_ChildBranchId");

                    b.HasIndex("StatementId")
                        .HasName("IX_StatementId");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("DistributionReceiveInvoice");

                    b.HasComment("分销收票");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionReceiveInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("开票金额");

                    b.Property<decimal>("ChargeOffAmount")
                        .HasColumnType("money")
                        .HasComment("销账金额");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int")
                        .HasComment("商品编号");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int")
                        .HasComment("数量");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("订单编号");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("单价");

                    b.Property<int>("ReceiveInvoiceId")
                        .HasColumnType("int")
                        .HasComment("DistributionReceiveInvoice表Id");

                    b.Property<string>("TaxCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("商品税收编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("money")
                        .HasComment("税率");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId")
                        .HasName("IX_GoodsId");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderId");

                    b.HasIndex("ReceiveInvoiceId")
                        .HasName("IX_ReceiveInvoiceId");

                    b.ToTable("DistributionReceiveInvoiceDetail");

                    b.HasComment("分销收票明细");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionReceiveMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("收款方");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money")
                        .HasComment("销账金额，与订单的销账金额相等");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("收款备注")
                        .HasMaxLength(500);

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("支付方式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PbranchId")
                        .HasColumnName("PBranchId")
                        .HasColumnType("int")
                        .HasComment("付款方");

                    b.Property<int?>("ReceiveAccount")
                        .HasColumnType("int")
                        .HasComment("付款账户，Sys_BranchBankInfo的编号");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("datetime")
                        .HasComment("收款日期");

                    b.Property<decimal>("ReceiveMoney")
                        .HasColumnType("money")
                        .HasComment("实际收款金额");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("收款操作人");

                    b.HasKey("Id");

                    b.ToTable("DistributionReceiveMoney");
                });

            modelBuilder.Entity("ERP_API.Models.DistributionReceiveMoneyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("明细实收金额");

                    b.Property<decimal>("ChargeOffAmount")
                        .HasColumnType("money")
                        .HasComment("明细销账金额");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ReceiveMoneyId")
                        .HasColumnType("int")
                        .HasComment("分销订单收款记录表Id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DistributionReceiveMoneyDetail");
                });

            modelBuilder.Entity("ERP_API.Models.Dostatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ApplyInvoiceMoney")
                        .HasColumnType("money");

                    b.Property<decimal?>("ApplyReceiveMoney")
                        .HasColumnType("money");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("InvoiceChargeOff")
                        .HasColumnType("money");

                    b.Property<decimal>("InvoiceMoney")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("PaidMoney")
                        .HasColumnType("money");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PrintNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("SumGoodsAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DOStatement");
                });

            modelBuilder.Entity("ERP_API.Models.DostatementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("StatementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DOStatementDetail");
                });

            modelBuilder.Entity("ERP_API.Models.Dpstatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money")
                        .HasComment("销账金额");

                    b.Property<decimal>("InvoiceApplyMoney")
                        .HasColumnType("money")
                        .HasComment("收票申请金额");

                    b.Property<decimal>("InvoiceChargeOff")
                        .HasColumnType("money")
                        .HasComment("收票销账金额");

                    b.Property<decimal>("InvoiceMoney")
                        .HasColumnType("money")
                        .HasComment("收票金额");

                    b.Property<string>("InvoiceStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('未收票')")
                        .HasComment("未收票、已收票、部分收票")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasComment("备注")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("PaidApplyMoney")
                        .HasColumnType("money")
                        .HasComment("付款申请金额");

                    b.Property<decimal>("PaidMoney")
                        .HasColumnType("money")
                        .HasComment("收款金额");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('未付款')")
                        .HasComment("未付款、已付款、部分付款")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money")
                        .HasComment("对账单总额");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasComment("分销商");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("操作时间");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int")
                        .HasComment("操作人");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("IX_BranchId");

                    b.HasIndex("InvoiceStatus")
                        .HasName("IX_InvoiceStatus");

                    b.HasIndex("PayStatus")
                        .HasName("IX_PayStatus");

                    b.HasIndex("SupplierId")
                        .HasName("IX_PurchaseStatement");

                    b.ToTable("DPStatement");

                    b.HasComment("分销商对账");
                });

            modelBuilder.Entity("ERP_API.Models.DpstatementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DpstatementId")
                        .HasColumnName("DPStatementId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DpstatementId")
                        .HasName("IX_DPStatementId");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderId");

                    b.ToTable("DPStatementDetail");

                    b.HasComment("分销商对账明细");
                });

            modelBuilder.Entity("ERP_API.Models.EmailInvoiceSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime")
                        .HasComment("添加时间");

                    b.Property<string>("AppKey")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("AppSecret")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<long?>("ExpiresTime")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否开启");

                    b.Property<int?>("Plat")
                        .HasColumnType("int");

                    b.Property<string>("PlatApi")
                        .IsRequired()
                        .HasColumnName("PlatAPI")
                        .HasColumnType("varchar(max)")
                        .HasComment("平台电子发票API")
                        .IsUnicode(false);

                    b.Property<string>("PlatIdentity")
                        .HasColumnType("varchar(200)")
                        .HasComment("平台身份认证编号")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SaleAddress")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasComment("销售方地址")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("SaleBank")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("销售方开户行")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SaleBankAccount")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("销售方开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SaleName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("销售方名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SalePhone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("销售方电话")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SaleTaxNum")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("销售方税号")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Token")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("EmailInvoiceSetting");
                });

            modelBuilder.Entity("ERP_API.Models.FinanceAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("FinanceData")
                        .HasColumnType("text");

                    b.Property<int?>("FinanceId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FinanceAudit");
                });

            modelBuilder.Entity("ERP_API.Models.FinanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money")
                        .HasComment("余额");

                    b.Property<int>("BankId")
                        .HasColumnType("int")
                        .HasComment("账户编号");

                    b.Property<string>("BankInfo")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("开户行+账号名称")
                        .HasMaxLength(1000);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("DebtorId")
                        .HasColumnType("int")
                        .HasComment("借方");

                    b.Property<string>("DebtorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasComment("借方名称")
                        .HasMaxLength(500);

                    b.Property<decimal>("InitBalance")
                        .HasColumnType("money")
                        .HasComment("原金额");

                    b.Property<int>("LenderId")
                        .HasColumnType("int")
                        .HasComment("贷方");

                    b.Property<string>("LenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasComment("贷方名称")
                        .HasMaxLength(500);

                    b.Property<string>("Operate")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("操作")
                        .HasMaxLength(200);

                    b.Property<decimal>("OperateAmount")
                        .HasColumnType("money")
                        .HasComment("操作金额");

                    b.Property<DateTime?>("OpreteDate")
                        .HasColumnType("datetime")
                        .HasComment("实际收/付款日期");

                    b.Property<string>("PayType")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("支付方式")
                        .HasMaxLength(200);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("备注")
                        .HasMaxLength(4000);

                    b.Property<string>("SubjectCode")
                        .HasColumnType("varchar(500)")
                        .HasComment("科目code")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("科目名称")
                        .HasMaxLength(500);

                    b.Property<string>("Tpn")
                        .HasColumnType("varchar(500)")
                        .HasComment("第三方")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("FinanceRecord");
                });

            modelBuilder.Entity("ERP_API.Models.FinanceSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddAt")
                        .HasColumnType("datetime");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("科目编号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasComment("科目名称")
                        .HasMaxLength(500);

                    b.Property<string>("Pcode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("上级编号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类型")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatetAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("FinanceSubject");
                });

            modelBuilder.Entity("ERP_API.Models.Franchisee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("公司详细地址")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CompanyArea")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("公司地址区县")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CompanyCity")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("公司地址城市")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("公司名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CompanyProvince")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("公司地址省份")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ContractWay")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("联系方式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LocationAddress")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("所在地详细地址")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("LocationArea")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("所在地区县")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LocationCity")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("所在地城市")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LocationProvince")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("所在地省份")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Franchisee");

                    b.HasComment("加盟商");
                });

            modelBuilder.Entity("ERP_API.Models.Gift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GiftName")
                        .HasColumnType("varchar(50)")
                        .HasComment("礼品显示出来的名称，例如：反光书包")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("IsValid")
                        .HasColumnType("int");

                    b.Property<int>("MaxNum")
                        .HasColumnType("int");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gift");
                });

            modelBuilder.Entity("ERP_API.Models.Goods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("0：共有商品");

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasComment("品牌Id");

                    b.Property<string>("Color")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CombinationType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('单一')")
                        .HasComment("商品的组合类型：单一、母商品、子商品、组合商品")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Cuxiao")
                        .HasColumnName("cuxiao")
                        .HasColumnType("numeric(18, 2)")
                        .HasComment(">0说明是促销商品");

                    b.Property<DateTime>("CuxiaoDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cuxiaoDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1949)-(10))-(1))")
                        .HasComment("促销截止日期");

                    b.Property<int?>("DataSource")
                        .HasColumnType("int")
                        .HasComment("是否抓取/下载");

                    b.Property<int>("DetailPhotoNum")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('‘’')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("DonvvSku")
                        .HasColumnName("DonvvSKU")
                        .HasColumnType("int");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool>("ForbidWebOrderByNoStock")
                        .HasColumnType("bit");

                    b.Property<int>("FranchiseeId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("HomeImage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('‘’')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("InPrice")
                        .HasColumnType("decimal(18, 4)")
                        .HasComment("最新进价");

                    b.Property<string>("InnerId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsEnable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("是否有效，1：有效，0：禁用商品");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWeb")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("网站是否可见");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("MinimumQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Model")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasComment("商品名称，不包括品牌和型号")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("PackingList")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("包装清单");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasComment(">1 说明是子商品，0：普通商品，1：母商品");

                    b.Property<int>("PhotoNum")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PriceExtend")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Py")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PY")
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('‘’')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("Rate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))")
                        .HasComment("积分比例");

                    b.Property<int>("Recommend")
                        .HasColumnType("int")
                        .HasComment("推荐度");

                    b.Property<DateTime>("RecommendDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1900)-(1))-(1))");

                    b.Property<int>("SaleCount")
                        .HasColumnType("int")
                        .HasComment("销售次数，每日集中计算");

                    b.Property<int>("SaleNumber")
                        .HasColumnType("int")
                        .HasComment("销售数量，每日集中计算");

                    b.Property<string>("SalesAnalysis")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('正常品')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Service")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("('‘’')")
                        .HasComment("服务条款");

                    b.Property<string>("Sn")
                        .IsRequired()
                        .HasColumnName("SN")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("StockNum")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasComment("商品标签")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tpn")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Tpname")
                        .HasColumnName("TPName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("商品类别Id");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('‘’')")
                        .HasComment("基本单位")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("NonClusteredIndex-20181031-134951");

                    b.HasIndex("BrandId")
                        .HasName("NonClusteredIndex-20181031-135019");

                    b.HasIndex("TypeId")
                        .HasName("NonClusteredIndex-20181031-135038");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsCaptcha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Captcha")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("GoodsCaptcha");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int")
                        .HasComment("创建用户");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int")
                        .HasComment("删除用户");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<int?>("GoodsType")
                        .HasColumnType("int")
                        .HasComment("商品类目");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("图标")
                        .HasMaxLength(200);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int")
                        .HasComment("修改用户");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称")
                        .HasMaxLength(50);

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasComment("父级Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("备注")
                        .HasMaxLength(200);

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户Id");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("链接")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ParentId")
                        .HasName("Index_ParentId");

                    b.ToTable("GoodsCategory");

                    b.HasComment("虚拟类目");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((3))");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("GoodsComment");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsDefaultInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("AddUserId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("GoodsDefaultInfo");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsExtensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int")
                        .HasComment("商品编号");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasComment("规格内容");

                    b.Property<int?>("VirtualSales")
                        .HasColumnType("int")
                        .HasComment("商品虚拟销量，用于应对投标");

                    b.HasKey("Id");

                    b.ToTable("GoodsExtensions");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsGroupDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsGroupId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoodsGroupDetail");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Tenant")
                        .HasColumnType("int");

                    b.Property<string>("Tracking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId")
                        .HasName("Index_CreatorUserId");

                    b.HasIndex("GoodsId")
                        .HasName("Index_GoodsId");

                    b.HasIndex("GoodsName")
                        .HasName("Index_GoodsName");

                    b.HasIndex("UserName")
                        .HasName("Index_UserName");

                    b.ToTable("GoodsLog");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("GoodsModel");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsModelValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("GoodsId")
                        .HasName("IX_GoodsModelType");

                    b.ToTable("GoodsModelValue");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('‘’')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("DonvvSkuCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("DonvvSpuCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("IsDefault")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<decimal?>("PriceExtend")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("(N'小')")
                        .HasComment("[小、中、大]")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId", "Type")
                        .IsUnique()
                        .HasName("IX_GoodsPackage");

                    b.ToTable("GoodsPackage");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsPackageLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("IsDefault")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<string>("OldBarCode")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("OldName")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int>("OldNum")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoodsPackageLog");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsParamValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("ParamId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("GoodsId")
                        .HasName("IX_GoodsParamValue");

                    b.HasIndex("ParamId", "Value")
                        .HasName("IX_GoodsParamValue_1");

                    b.ToTable("GoodsParamValue");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ImgServerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDetailPhoto")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHomeImage")
                        .HasColumnType("bit");

                    b.Property<string>("Photo100Url")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Photo250Url")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasComment("图片在文件服务器上的访问路径")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("Width")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId")
                        .HasName("goodsphotoindex");

                    b.ToTable("GoodsPhoto");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsPriceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("money");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("GoodsPriceLog");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DefaultSource")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DefaultUnit")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsLeaf")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("是否是叶子分类（一般是3级），只允许在叶子分类下添加商品");

                    b.Property<bool?>("IsVisible")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .IsRequired()
                        .HasColumnName("PCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PointRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))")
                        .HasComment("积分比率");

                    b.Property<string>("PriceArea")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasComment("价格区间展示")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Py")
                        .HasColumnName("PY")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("GoodsType");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsTypeParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("HasOption")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCondition")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId", "Name")
                        .IsUnique()
                        .HasName("IX_GoodsTypeParams");

                    b.ToTable("GoodsTypeParam");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsTypeParamGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ParamSource")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("TypeId", "GroupName", "BranchId")
                        .IsUnique()
                        .HasName("IX_GoodsTypeParamGroup");

                    b.ToTable("GoodsTypeParamGroup");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsTypeParamOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ParamId")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("GoodsTypeParamOption");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsTypePrivateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("bit");

                    b.Property<int>("PointRate")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((99))");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("TypeId", "BranchId")
                        .IsUnique()
                        .HasName("IX_GoodsTypePrivateInfo");

                    b.ToTable("GoodsTypePrivateInfo");
                });

            modelBuilder.Entity("ERP_API.Models.GoodsTypeUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("TypeCode")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("GoodsTypeUpdate");
                });

            modelBuilder.Entity("ERP_API.Models.GroupOrderStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("PaidMoney")
                        .HasColumnType("money");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroupOrderStatement");
                });

            modelBuilder.Entity("ERP_API.Models.GroupOrderStatementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroupOrderStatementDetail");
                });

            modelBuilder.Entity("ERP_API.Models.GroupPay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("OrderStatementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PayMoney")
                        .HasColumnType("money");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroupPay");
                });

            modelBuilder.Entity("ERP_API.Models.IAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AppKey")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("AppSecret")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ExpiresTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_Analysis");
                });

            modelBuilder.Entity("ERP_API.Models.IBeiJingGoods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IBrand")
                        .HasColumnName("I_Brand")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ICategory")
                        .HasColumnName("I_Category")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("IProductId")
                        .HasColumnName("I_ProductId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("IProductName")
                        .HasColumnName("I_ProductName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("ISalePrice")
                        .HasColumnName("I_SalePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("I_BeiJingGoods");
                });

            modelBuilder.Entity("ERP_API.Models.IBeiJingGoodsMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("DonvvGoodsId")
                        .HasColumnType("int");

                    b.Property<string>("IBeiJingProductId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("I_BeiJingProductId")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("I_BeiJingGoodsMap");
                });

            modelBuilder.Entity("ERP_API.Models.IBeiJingProductParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IParamName")
                        .HasColumnName("I_ParamName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("IParamValue")
                        .HasColumnName("I_ParamValue")
                        .HasColumnType("text");

                    b.Property<string>("IProductId")
                        .HasColumnName("I_ProductId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TlspPk")
                        .HasColumnName("TLSP_PK")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TppvPk")
                        .HasColumnName("TPPV_PK")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("I_BeiJingProductParam");
                });

            modelBuilder.Entity("ERP_API.Models.IBeiJingZhengCaiCityList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Parent")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("I_BeiJingZhengCaiCityList");
                });

            modelBuilder.Entity("ERP_API.Models.ICategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(8, 4)");

                    b.Property<decimal?>("Discount2")
                        .HasColumnType("decimal(8, 4)");

                    b.Property<decimal?>("Discount3")
                        .HasColumnType("decimal(8, 4)");

                    b.Property<decimal?>("Discount4")
                        .HasColumnType("decimal(8, 4)");

                    b.Property<string>("ICategory1")
                        .IsRequired()
                        .HasColumnName("I_Category")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IPlatId")
                        .HasColumnName("I_PlatId")
                        .HasColumnType("int");

                    b.Property<string>("ITypeCode")
                        .IsRequired()
                        .HasColumnName("I_TypeCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ITypeName")
                        .IsRequired()
                        .HasColumnName("I_TypeName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_Category");
                });

            modelBuilder.Entity("ERP_API.Models.IChengDuCategoryExt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Summoney")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_ChengDuCategoryExt");
                });

            modelBuilder.Entity("ERP_API.Models.IChengDuCategoryParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Vals")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("I_ChengDuCategoryParam");
                });

            modelBuilder.Entity("ERP_API.Models.IChengDuParamValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("ParamId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("I_ChengDuParamValue");
                });

            modelBuilder.Entity("ERP_API.Models.IEfficientGoods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddAt")
                        .HasColumnType("datetime");

                    b.Property<string>("AddBy")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("EfficientGoodsCardNum")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("EfficientGoodsCardOrgan")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("EfficientGoodsImagePath")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("IprojectId")
                        .HasColumnName("IProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_EfficientGoods");
                });

            modelBuilder.Entity("ERP_API.Models.IEgoods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CertNo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("I_EGoods");

                    b.HasComment("商品环保标志");
                });

            modelBuilder.Entity("ERP_API.Models.IErrLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("JsonStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_ErrLog");
                });

            modelBuilder.Entity("ERP_API.Models.IGoods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("IProjectId")
                        .HasColumnName("I_ProjectId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsModify")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNeededPush")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MarketPrice")
                        .HasColumnType("money");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int?>("StockNum")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId", "Unit", "IProjectId")
                        .IsUnique()
                        .HasName("IX_I_Goods");

                    b.ToTable("I_Goods");
                });

            modelBuilder.Entity("ERP_API.Models.IGoodsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("IProjectId")
                        .HasColumnName("I_ProjectId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MarketPrice")
                        .HasColumnType("money");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<string>("Operate")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("OperateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("I_GoodsLog");
                });

            modelBuilder.Entity("ERP_API.Models.IGoodsMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ProductNameEc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductNameEC")
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ProductUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<string>("ProductUrlEc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductUrlEC")
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SkuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("I_GoodsMap");
                });

            modelBuilder.Entity("ERP_API.Models.IGoodsOperateLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtCreate")
                        .HasColumnName("dtCreate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUpdate")
                        .HasColumnName("dtUpdate")
                        .HasColumnType("datetime");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDel")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<int>("OperateType")
                        .HasColumnType("int")
                        .HasComment(@"1，新增商品；
2，修改商品信息；
3，删除商品；
4，商品上下架状态变更；
5，商品价格变更；
6，商品库存变更；
7，商品配件、服务变更；
8，商品图片变更
");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("I_GoodsOperateLog");
                });

            modelBuilder.Entity("ERP_API.Models.IGoodsPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasComment("配件名称")
                        .HasMaxLength(500);

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("售价");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_GoodsPart");
                });

            modelBuilder.Entity("ERP_API.Models.IMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("IprojectId")
                        .HasColumnName("IProjectId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_Message");
                });

            modelBuilder.Entity("ERP_API.Models.IOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("IOrderId")
                        .IsRequired()
                        .HasColumnName("I_OrderId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("I_OrderDetail");
                });

            modelBuilder.Entity("ERP_API.Models.IOrderExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttrName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("AttrVal")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_OrderExtension");
                });

            modelBuilder.Entity("ERP_API.Models.IOrders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ICustomer")
                        .HasColumnName("I_Customer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IOrderId")
                        .IsRequired()
                        .HasColumnName("I_OrderId")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IProjectId")
                        .HasColumnName("I_ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("I_Orders");
                });

            modelBuilder.Entity("ERP_API.Models.IPlat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IProviderId")
                        .HasColumnName("I_ProviderId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPostData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_Plat");
                });

            modelBuilder.Entity("ERP_API.Models.IProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppKey")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("AppSecret")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<long?>("ExpiredTime")
                        .HasColumnType("bigint");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_Product");
                });

            modelBuilder.Entity("ERP_API.Models.IProductsForZgly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IproductName")
                        .HasColumnName("IProductName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Isku")
                        .HasColumnName("ISku")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_ProductsForZGLY");
                });

            modelBuilder.Entity("ERP_API.Models.IProductsMapForZgly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("DonvvSku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("IproductSku")
                        .HasColumnName("IProductSku")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_ProductsMapForZGLY");
                });

            modelBuilder.Entity("ERP_API.Models.IProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AppKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AppSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .HasColumnName("client_id")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("IPlatId")
                        .HasColumnName("I_PlatId")
                        .HasColumnType("int");

                    b.Property<string>("PrivateKey")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_Project");
                });

            modelBuilder.Entity("ERP_API.Models.IProjectExtention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IProjectId")
                        .HasColumnName("I_ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("PropName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PropValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("I_ProjectExtention");
                });

            modelBuilder.Entity("ERP_API.Models.IProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("I_Provider");
                });

            modelBuilder.Entity("ERP_API.Models.Icontract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("BankAccount")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyNum")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ConNum")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContractName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Sign")
                        .HasColumnType("text");

                    b.Property<string>("Signature")
                        .HasColumnType("text");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("IContract");
                });

            modelBuilder.Entity("ERP_API.Models.IcontractMy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DtSignTime")
                        .HasColumnName("dtSignTime")
                        .HasColumnType("datetime")
                        .HasComment("签章时间");

                    b.Property<DateTime>("DtSubmitTime")
                        .HasColumnName("dtSubmitTime")
                        .HasColumnType("datetime")
                        .HasComment("提交时间");

                    b.Property<string>("FielUrl")
                        .HasColumnName("fielUrl")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("pdf所在路径")
                        .HasMaxLength(255);

                    b.Property<string>("FileByte")
                        .IsRequired()
                        .HasColumnName("fileByte")
                        .HasColumnType("text")
                        .HasComment("未签章合同文件流");

                    b.Property<string>("FileByted")
                        .HasColumnName("fileByted")
                        .HasColumnType("text")
                        .HasComment("已签章合同文件流");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("fileName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IprojectId")
                        .HasColumnName("IProjectId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit")
                        .HasComment("是否签章 0：否；1：是");

                    b.Property<int>("OrderId")
                        .HasColumnName("orderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IContractMY");
                });

            modelBuilder.Entity("ERP_API.Models.IntroductionInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IntroductionInvestment");
                });

            modelBuilder.Entity("ERP_API.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Ac")
                        .HasColumnName("AC")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("Afc")
                        .HasColumnName("AFC")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("GiftNum")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCustomGoods")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StoreZone")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("StoreZoneMemo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId", "StoreId", "StoreZone", "IsCustomGoods", "OrderDetailId")
                        .IsUnique()
                        .HasName("IX_Inventory");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("ERP_API.Models.InventoryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Ac")
                        .HasColumnName("AC")
                        .HasColumnType("money");

                    b.Property<decimal>("Afc")
                        .HasColumnName("AFC")
                        .HasColumnType("money");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCustomGoods")
                        .HasColumnType("bit");

                    b.Property<int>("NewNum")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int")
                        .HasComment("本次操作数量，可为负数，比如拣货就是 负数，入库就是正数");

                    b.Property<int>("OldNum")
                        .HasColumnType("int")
                        .HasComment("操作前的数量");

                    b.Property<string>("OldStoreZone")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Operate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("操作类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("RelationId")
                        .HasColumnType("int")
                        .HasComment("相关Id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StoreZone")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InventoryLog");
                });

            modelBuilder.Entity("ERP_API.Models.InventoryModifyAc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("ModifyAcid")
                        .HasColumnName("ModifyACId")
                        .HasColumnType("int");

                    b.Property<decimal>("NewAc")
                        .HasColumnName("NewAC")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<decimal>("OldAc")
                        .HasColumnName("OldAC")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StoreZone")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("StoreZoneMemo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("InventoryModifyAC");
                });

            modelBuilder.Entity("ERP_API.Models.InventoryStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("MaxStock")
                        .HasColumnType("int")
                        .HasComment("最大库存，库存上限");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("MinStock")
                        .HasColumnType("int")
                        .HasComment("最小库存，安全库存");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasComment("仓库号，如果为0，表示共有商品");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId", "StoreId")
                        .HasName("IX_InventoryStock");

                    b.ToTable("InventoryStock");
                });

            modelBuilder.Entity("ERP_API.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceDetailUrl")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("InvoiceMoney")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("InvoiceRequireId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsInvoiceSuccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPushInvoicePlat")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRelateDetail")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("OrderNo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("OrderStatementId")
                        .HasColumnType("int");

                    b.Property<string>("PdfUrl")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("PlatInvoiceRequestNo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ReceiveMoneyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ERP_API.Models.InvoiceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CancelDetailUrl")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("CancelOrderNo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CancelPdfUrl")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("CancelPlatInvoiceRequestNo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Content")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("InvoiceCreateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("InvoiceCreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InvoiceDeleteTime")
                        .HasColumnType("datetime");

                    b.Property<int>("InvoiceDeleteUserId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceDetailUrl")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("InvoiceMoney")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("InvoiceRequireId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsInvoiceSuccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPushInvoicePlat")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("OrderNo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("OrderStatementId")
                        .HasColumnType("int");

                    b.Property<string>("PdfUrl")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("PlatInvoiceRequestNo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ReceiveMoneyId")
                        .HasColumnType("int");

                    b.Property<string>("StatementIds")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("InvoiceLog");
                });

            modelBuilder.Entity("ERP_API.Models.InvoiceRequire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerAddress")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBank")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BuyerPhone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BuyerTaxNum")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DistributionType")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceMemo")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsCrossInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRelateDetail")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("预留字段：收票人");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PreInvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("SaleAddress")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SaleBank")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SaleBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SaleName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SalePhone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SaleTaxNum")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("StatementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InvoiceRequire");
                });

            modelBuilder.Entity("ERP_API.Models.InvoiceRequireDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("唯一标示ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsInvoiceNum")
                        .HasColumnType("int");

                    b.Property<decimal?>("InvoiceMoney")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("InvoiceRequireId")
                        .HasColumnType("int")
                        .HasComment("开票申请表ID");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int")
                        .HasComment("订单明细Id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("StatementId")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("InvoiceRequireDetail");
                });

            modelBuilder.Entity("ERP_API.Models.IorderContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("ContractNum")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeliveryTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiveUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Tel")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("IOrderContract");
                });

            modelBuilder.Entity("ERP_API.Models.LoginedIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerCookie")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("PostUrl")
                        .HasColumnType("text");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("LoginedIdentity");
                });

            modelBuilder.Entity("ERP_API.Models.Logistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddAt")
                        .HasColumnType("datetime");

                    b.Property<string>("LogisticName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("LogisticNo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Logistics");
                });

            modelBuilder.Entity("ERP_API.Models.LogisticsCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasComment("快递，物流，国际");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("SupportedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("LogisticsCompany");
                });

            modelBuilder.Entity("ERP_API.Models.LogisticsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("OperateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("LogisticsDetail");
                });

            modelBuilder.Entity("ERP_API.Models.LogisticsInfomation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FromAddress")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("FromTelphone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FromUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int>("LogisticsCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("LogisticsInfo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderType")
                        .HasColumnType("int");

                    b.Property<string>("ToAddress")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("ToTelphone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ToUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("LogisticsInfomation");
                });

            modelBuilder.Entity("ERP_API.Models.LogisticsSubscribeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Context")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("LogisticsSubscribeLog");
                });

            modelBuilder.Entity("ERP_API.Models.LogisticsSupported", b =>
                {
                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CountryCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogisticsCompany")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.ToTable("LogisticsSupported");
                });

            modelBuilder.Entity("ERP_API.Models.MajorParamsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("ParamsName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ParamsValue")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("PlatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UserBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MajorParamsDetail");
                });

            modelBuilder.Entity("ERP_API.Models.MallFloatAd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MallFloatAd");
                });

            modelBuilder.Entity("ERP_API.Models.MallSideBar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("HoverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MallSideBar");
                });

            modelBuilder.Entity("ERP_API.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Area")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ConfirmLevel")
                        .HasColumnType("int")
                        .HasComment("用户的审核级别");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)")
                        .HasComment("邮箱")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("HeadPortraitUrl")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Im")
                        .HasColumnName("IM")
                        .HasColumnType("varchar(50)")
                        .HasComment("即时通讯Id")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasComment("是否是公司管理员");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheckEmail")
                        .HasColumnType("bit")
                        .HasComment("邮件是否验证");

                    b.Property<bool>("IsCheckMobile")
                        .HasColumnType("bit")
                        .HasComment("手机是否验证");

                    b.Property<bool?>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('1')");

                    b.Property<bool>("IsDerectApply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailApply")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("是否有效");

                    b.Property<bool>("IsForbidden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainContact")
                        .HasColumnType("bit")
                        .HasComment("是否主要联系人");

                    b.Property<bool>("IsOrderAuthority")
                        .HasColumnType("bit")
                        .HasComment("是否有下单权限");

                    b.Property<bool>("IsOrderForManyDepts")
                        .HasColumnType("bit");

                    b.Property<string>("LoginName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("LoginNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassWord")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double>("Point")
                        .HasColumnType("float")
                        .HasComment("积分");

                    b.Property<string>("Position")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PostCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Province")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("RealName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RegisterMethod")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('平台开通')")
                        .HasComment("注册方式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Role")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Telphone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("VipcounterLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VIPCounterLevel")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("ERP_API.Models.MemberAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TelPhone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .HasName("IX_MemberAddress");

                    b.ToTable("MemberAddress");
                });

            modelBuilder.Entity("ERP_API.Models.MemberAddressTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TelPhone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MemberAddressTemp");
                });

            modelBuilder.Entity("ERP_API.Models.MemberApplyDept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)")
                        .HasComment("部门编号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasComment("客户Id");

                    b.Property<int>("DeptId")
                        .HasColumnType("int")
                        .HasComment("此联系人能审核的部门Id");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("部门名称")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("联系人Id");

                    b.Property<string>("Pcode")
                        .HasColumnName("PCode")
                        .HasColumnType("varchar(100)")
                        .HasComment("父部门编号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("MemberApplyDept");
                });

            modelBuilder.Entity("ERP_API.Models.MemberAuth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpireTimeSpan")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("RereshToken")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("StrustNo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MemberAuth");
                });

            modelBuilder.Entity("ERP_API.Models.MemberCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayNum")
                        .HasColumnType("int");

                    b.Property<string>("DisplayUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("Multiples")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("MemberId", "GoodsId", "Multiples", "DisplayUnit")
                        .IsUnique()
                        .HasName("IX_MemberCart");

                    b.ToTable("MemberCart");
                });

            modelBuilder.Entity("ERP_API.Models.MemberFav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId", "MemberId")
                        .HasName("IX_MemberFav");

                    b.ToTable("MemberFav");
                });

            modelBuilder.Entity("ERP_API.Models.MemberInvoiceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("EmailForInvoice")
                        .HasColumnType("varchar(200)")
                        .HasComment("电子发票邮箱")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceAddress")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasComment("地址")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceBank")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("开户行")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceBankAccount")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceCategory")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票类别（纸质、电子）")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceContent")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票内容")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceMemo")
                        .HasColumnType("varchar(500)")
                        .HasComment("发票备注")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("发票抬头")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("InvoicePhone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("注册手机")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceReceivePhone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceTaxNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("税号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('0')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("MemberInvoiceInfo");
                });

            modelBuilder.Entity("ERP_API.Models.MemberLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("懂微租户唯一标识");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasComment("客户Id");

                    b.Property<string>("CustomerName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("联系人Id");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("联系人名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注")
                        .HasMaxLength(500);

                    b.Property<int>("Operate")
                        .HasColumnType("int")
                        .HasComment("操作，枚举");

                    b.Property<string>("Tracking")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("联系人关联信息");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("MemberLog");
                });

            modelBuilder.Entity("ERP_API.Models.MemberOrderDept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)")
                        .HasComment("部门编号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasComment("客户Id");

                    b.Property<int>("DeptId")
                        .HasColumnType("int")
                        .HasComment("此联系人能下单的部门Id");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("部门名称")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasComment("联系人Id");

                    b.Property<string>("Pcode")
                        .HasColumnName("PCode")
                        .HasColumnType("varchar(100)")
                        .HasComment("父部门编号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("MemberOrderDept");
                });

            modelBuilder.Entity("ERP_API.Models.MemberPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<decimal>("Income")
                        .HasColumnType("money");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int>("RelationId")
                        .HasColumnType("int");

                    b.Property<decimal>("Spend")
                        .HasColumnType("money");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .HasName("IX_MemberPoint");

                    b.ToTable("MemberPoint");
                });

            modelBuilder.Entity("ERP_API.Models.MemberRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("MemberRole");
                });

            modelBuilder.Entity("ERP_API.Models.MemberTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Area")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ConfirmLevel")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Im")
                        .HasColumnName("IM")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheckEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheckMobile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('1')");

                    b.Property<bool>("IsDerectApply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailApply")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsForbidden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainContact")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrderAuthority")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrderForManyDepts")
                        .HasColumnType("bit");

                    b.Property<string>("LoginName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("LoginNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassWord")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double>("Point")
                        .HasColumnType("float");

                    b.Property<string>("PostCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Province")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("RealName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RegisterMethod")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('平台开通')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Role")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Telphone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("VipcounterLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VIPCounterLevel")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("MemberTemp");
                });

            modelBuilder.Entity("ERP_API.Models.ModifyAc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("ModifyGoodsInPrice")
                        .HasColumnType("bit");

                    b.Property<bool>("ModifyInventoryAc")
                        .HasColumnName("ModifyInventoryAC")
                        .HasColumnType("bit");

                    b.Property<int>("ModifyOrderDetailAc")
                        .HasColumnName("ModifyOrderDetailAC")
                        .HasColumnType("int");

                    b.Property<decimal>("NewAc")
                        .HasColumnName("NewAC")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("NewInPrice")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("OldAc")
                        .HasColumnName("OldAC")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("OldInPrice")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("OrderCount")
                        .HasColumnType("int");

                    b.Property<int>("StockNum")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ModifyAC");
                });

            modelBuilder.Entity("ERP_API.Models.NeedToPurchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("PrintNum")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NeedToPurchase");
                });

            modelBuilder.Entity("ERP_API.Models.NeedToPurchaseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreditCard")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("Emergency")
                        .HasColumnType("bit");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsMemo")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<decimal?>("InPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsCustomGoods")
                        .HasColumnType("bit");

                    b.Property<int>("LackNum")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NeedToPurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseMemo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("PurchaseType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.ToTable("NeedToPurchaseDetail");
                });

            modelBuilder.Entity("ERP_API.Models.NeedToPurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NeedToPurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NeedToPurchaseOrder");
                });

            modelBuilder.Entity("ERP_API.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'‘’')")
                        .HasMaxLength(50);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsEnable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsTop")
                        .HasColumnType("bit");

                    b.Property<int>("NewsTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("ERP_API.Models.NewsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("NewsType");
                });

            modelBuilder.Entity("ERP_API.Models.NotifyMsg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("内容");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int")
                        .HasComment("创建用户");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int")
                        .HasComment("删除用户");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("Extend1")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("扩展属性")
                        .HasMaxLength(200);

                    b.Property<int?>("Extend2")
                        .HasColumnType("int")
                        .HasComment("扩展值");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<int>("Item")
                        .HasColumnType("int")
                        .HasComment("消息分类    邮件/短信/系统消息/用户消息");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int")
                        .HasComment("修改用户");

                    b.Property<int?>("ReceiveId")
                        .HasColumnType("int")
                        .HasComment("接受者Id");

                    b.Property<int?>("RelationId")
                        .HasColumnType("int")
                        .HasComment("关联值");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("备注")
                        .HasMaxLength(200);

                    b.Property<int?>("SendId")
                        .HasColumnType("int")
                        .HasComment("发送者Id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("未发送/发送中/发送成功/发送失败");

                    b.Property<int>("TempletId")
                        .HasColumnType("int")
                        .HasComment("模板Id");

                    b.Property<string>("TempletValue")
                        .HasColumnType("text")
                        .HasComment("模板值");

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("标题")
                        .HasMaxLength(200);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("消息类型");

                    b.HasKey("Id");

                    b.ToTable("Notify_Msg");

                    b.HasComment("系统消息");
                });

            modelBuilder.Entity("ERP_API.Models.NotifySetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppKey")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EmailName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EmailNickName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EmailPsw")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EmailSmtp")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Extend1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Extend2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Tenant")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notify_Setting");
                });

            modelBuilder.Entity("ERP_API.Models.NotifySmsSign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int")
                        .HasComment("创建用户");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int")
                        .HasComment("删除用户");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("显示名称")
                        .HasMaxLength(50);

                    b.Property<string>("Extend1")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(50);

                    b.Property<string>("Extend2")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int")
                        .HasComment("修改用户");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("备注")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态");

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.HasKey("Id");

                    b.ToTable("Notify_SmsSign");

                    b.HasComment("短信签名");
                });

            modelBuilder.Entity("ERP_API.Models.NotifyTemplet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Code")
                        .HasColumnType("bigint")
                        .HasComment("外部编码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int")
                        .HasComment("创建用户");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int")
                        .HasComment("删除用户");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("DisplayTemplet")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("显示内容");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int")
                        .HasComment("修改用户");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称")
                        .HasMaxLength(50);

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("审核备注")
                        .HasMaxLength(200);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("备注")
                        .HasMaxLength(200);

                    b.Property<int?>("SignId")
                        .HasColumnType("int")
                        .HasComment("签名Id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("未审核/审核中/审核成功/审核失败");

                    b.Property<string>("Templet")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("模板内容");

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("标题")
                        .HasMaxLength(200);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("类型");

                    b.HasKey("Id");

                    b.ToTable("Notify_Templet");

                    b.HasComment("系统邮件模板");
                });

            modelBuilder.Entity("ERP_API.Models.OrderAfterSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplyNum")
                        .HasColumnType("int");

                    b.Property<string>("ApplyReason")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("ApplyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplyType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ApplyUserId")
                        .HasColumnType("int");

                    b.Property<string>("ApplyUserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ContactWay")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("DisplayStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("InnerStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsEvaluate")
                        .HasColumnType("bit");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("OperateMessage")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("OperateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("OperateType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("OperateUserId")
                        .HasColumnType("int");

                    b.Property<string>("OperateUserName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PickupAddress")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("PickupDate")
                        .HasColumnType("datetime");

                    b.Property<string>("QuestionDescribe")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ReceiveAddress")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("ReturnWay")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Updatetime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("OrderAfterSale");
                });

            modelBuilder.Entity("ERP_API.Models.OrderAfterSaleFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("AfterSaleId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InnerStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("OperateMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("OperateType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("OperateUserId")
                        .HasColumnType("int");

                    b.Property<string>("OperateUserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderAfterSaleFlow");
                });

            modelBuilder.Entity("ERP_API.Models.OrderAfterSalePhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("AfterSaleId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("OrderAfterSalePhoto");
                });

            modelBuilder.Entity("ERP_API.Models.OrderArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllPage")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("SaveNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId", "Page")
                        .IsUnique()
                        .HasName("IX_OrderArchive");

                    b.ToTable("OrderArchive");
                });

            modelBuilder.Entity("ERP_API.Models.OrderBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoxId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PackageNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("PrintNum")
                        .HasColumnType("int")
                        .HasComment("包裹码打印次数");

                    b.Property<DateTime>("PrintTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("包裹的状态：未处理，已打印，已打包，已装车.")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StoreZone")
                        .HasColumnType("varchar(50)")
                        .HasComment("包裹所在区域")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("OrderId", "BoxId")
                        .IsUnique()
                        .HasName("IX_OrderBox");

                    b.ToTable("OrderBox");
                });

            modelBuilder.Entity("ERP_API.Models.OrderCheckoutLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckoutTime")
                        .HasColumnType("datetime")
                        .HasComment("结账时间");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int")
                        .HasComment("创建用户");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("备注")
                        .HasMaxLength(200);

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.HasKey("Id");

                    b.HasIndex("Tenant")
                        .HasName("Tenant");

                    b.ToTable("OrderCheckoutLog");

                    b.HasComment("订单结账日志");
                });

            modelBuilder.Entity("ERP_API.Models.OrderDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasComment("车辆Id");

                    b.Property<int>("CarUserId")
                        .HasColumnType("int")
                        .HasComment("车辆司机Id");

                    b.Property<string>("Latitude")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Longitude")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasComment("装车状态")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("StockOutUserId")
                        .HasColumnType("int")
                        .HasComment("出库员Id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("OrderDelivery");
                });

            modelBuilder.Entity("ERP_API.Models.OrderDeliveryBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("OrderBoxId")
                        .HasColumnType("int");

                    b.Property<int>("OrderDeliveryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("OrderBoxId")
                        .IsUnique()
                        .HasName("IX_OrderDeliveryBox");

                    b.ToTable("OrderDeliveryBox");
                });

            modelBuilder.Entity("ERP_API.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Ac")
                        .HasColumnName("AC")
                        .HasColumnType("money");

                    b.Property<decimal>("Afc")
                        .HasColumnName("AFC")
                        .HasColumnType("money");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<bool>("AntiCounterfeiting")
                        .HasColumnType("bit");

                    b.Property<decimal>("DisplayNoTaxPrice")
                        .HasColumnType("money");

                    b.Property<int>("DisplayNum")
                        .HasColumnType("int");

                    b.Property<decimal>("DisplayPrice")
                        .HasColumnType("money");

                    b.Property<string>("DisplayUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossProfit")
                        .HasColumnType("money");

                    b.Property<string>("GrossProfitPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InternalRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomGoods")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGift")
                        .HasColumnType("bit")
                        .HasComment("是否是赠品");

                    b.Property<bool>("IsTotalPriceModel")
                        .HasColumnType("bit");

                    b.Property<decimal>("NoTaxAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("NoTaxPrice")
                        .HasColumnType("money");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("OldOrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PickNum")
                        .HasColumnType("int");

                    b.Property<decimal>("Point")
                        .HasColumnType("money");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("PurchaseMemo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("RefundNum")
                        .HasColumnType("int");

                    b.Property<string>("SingleRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("OrderId", "GoodsId")
                        .IsUnique()
                        .HasName("IX_OrderDetail");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ERP_API.Models.OrderDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("订单所属Branch");

                    b.Property<decimal>("InvoiceChargeOff")
                        .HasColumnType("money")
                        .HasComment("收票状态");

                    b.Property<int>("InvoiceStatus")
                        .HasColumnType("int")
                        .HasComment("收票金额");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("订单编号");

                    b.Property<int>("OriginalBranchId")
                        .HasColumnType("int")
                        .HasComment("订单最原始的BranchId");

                    b.Property<double>("ParentReceiveRate")
                        .HasColumnType("float");

                    b.Property<decimal>("PayChargeOff")
                        .HasColumnType("money")
                        .HasComment("付款金额");

                    b.Property<int>("PayStatus")
                        .HasColumnType("int")
                        .HasComment("付款状态");

                    b.Property<int>("PbranchId")
                        .HasColumnName("PBranchId")
                        .HasColumnType("int")
                        .HasComment("订单所属Branch的父Branch");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money")
                        .HasComment("上级抽层后的订单总额");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("分配人员");

                    b.HasKey("Id");

                    b.ToTable("OrderDistribution");
                });

            modelBuilder.Entity("ERP_API.Models.OrderDistributionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("上级抽层后的金额");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("OrderDistributionId")
                        .HasColumnType("int")
                        .HasComment("分销订单与集团成员关联表Id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("上级抽层后的单价");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("OrderDistributionDetail");
                });

            modelBuilder.Entity("ERP_API.Models.OrderGoodsComments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CommentContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int>("Recommend")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("OrderGoodsComments");
                });

            modelBuilder.Entity("ERP_API.Models.OrderInvoiceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasComment("购方地址")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("购方开户行")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("购方开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("购方发票内容")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasComment("购方电子邮箱")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasComment("发票备注")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(50)")
                        .HasComment("购方手机号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("购方发票抬头")
                        .HasMaxLength(500);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("购方注册电话")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TaxNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("购方税号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("发票类型");

                    b.HasKey("Id");

                    b.ToTable("OrderInvoiceInfo");
                });

            modelBuilder.Entity("ERP_API.Models.OrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsInner")
                        .HasColumnType("bit")
                        .HasComment("1:内部可见；0：客户可见");

                    b.Property<string>("Operate")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OrderLog");
                });

            modelBuilder.Entity("ERP_API.Models.OrderModify", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNeedCollect")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.Property<int>("NeedToPurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("NewNum")
                        .HasColumnType("int");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("NewTaxRate")
                        .HasColumnType("money");

                    b.Property<int>("OldNum")
                        .HasColumnType("int");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("OldTaxRate")
                        .HasColumnType("money");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('‘’')")
                        .HasComment("订单修改后，自动生成 采购单时用到的状态")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderModify");

                    b.ToTable("OrderModify");
                });

            modelBuilder.Entity("ERP_API.Models.OrderModifyAc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossProfit")
                        .HasColumnType("money")
                        .HasComment("毛利");

                    b.Property<int>("ModifyAcid")
                        .HasColumnName("ModifyACId")
                        .HasColumnType("int");

                    b.Property<decimal>("NewAc")
                        .HasColumnName("NewAC")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("NewGrossProfit")
                        .HasColumnType("money");

                    b.Property<string>("NewGrossProfitPercent")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<decimal>("OldAc")
                        .HasColumnName("OldAC")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("OldGrossProfitPercent")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money")
                        .HasComment("订单金额");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("OrderModifyAC");
                });

            modelBuilder.Entity("ERP_API.Models.OrderPicking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistributeUserId")
                        .HasColumnType("int")
                        .HasComment("分单员");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PickingUserId")
                        .HasColumnType("int")
                        .HasComment("理货员Id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasName("IX_OrderPicking");

                    b.ToTable("OrderPicking");
                });

            modelBuilder.Entity("ERP_API.Models.OrderPickingLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GiftNum")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PickingUserId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StoreZone")
                        .IsRequired()
                        .HasColumnType("nchar(100)")
                        .IsFixedLength(true)
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("OrderPickingLog");
                });

            modelBuilder.Entity("ERP_API.Models.OrderReceiveMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money")
                        .HasComment("销账金额");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("OrderStatementId")
                        .HasColumnType("int");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("付款方式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PreReceiveMoneyId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiveAccount")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ReceiveMoney")
                        .HasColumnType("money")
                        .HasComment("收款金额");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderReceiveMoney");
                });

            modelBuilder.Entity("ERP_API.Models.OrderReceiveMoneyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal>("ChargeOffAmount")
                        .HasColumnType("money");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ReceiveMoneyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("OrderReceiveMoneyDetail");
                });

            modelBuilder.Entity("ERP_API.Models.OrderStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("InvoiceMoney")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsCrossInvoice")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("NeedToInvoice")
                        .HasColumnType("money");

                    b.Property<decimal>("PaidMoney")
                        .HasColumnType("money");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PrintNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("SumGoodsAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .HasName("IX_OrderStatement");

                    b.ToTable("OrderStatement");
                });

            modelBuilder.Entity("ERP_API.Models.OrderStatementCrossInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceRequireId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDetele")
                        .HasColumnType("bit");

                    b.Property<int>("StatementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("OrderStatementCrossInvoice");
                });

            modelBuilder.Entity("ERP_API.Models.OrderStatementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasName("IX_OrderStatementDetail");

                    b.ToTable("OrderStatementDetail");
                });

            modelBuilder.Entity("ERP_API.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("ApplyId")
                        .HasColumnType("int")
                        .HasComment("VIPApply的Id");

                    b.Property<DateTime>("ArchivedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('1900-01-01 00:00:00.000')");

                    b.Property<int>("AuditReason")
                        .HasColumnType("int");

                    b.Property<string>("AuditRemark")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("AuditStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))")
                        .HasComment("SYNAct客户Id");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<bool>("Checkout")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ConfirmFinishTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ConfirmStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("CreateVoucherResult")
                        .HasColumnType("bit");

                    b.Property<string>("Customer")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasComment("客户Id，个人客户则为0");

                    b.Property<DateTime?>("DeliveryFinishTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DeliveryStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DeliveryType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("DeptId")
                        .HasColumnType("int")
                        .HasComment("Member所在部门的Id");

                    b.Property<string>("DeptName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("EmailForInvoice")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("FinancialSoftware")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime")
                        .HasComment("订单完成时间");

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("GrossProfit")
                        .HasColumnType("money")
                        .HasComment("毛利");

                    b.Property<decimal>("GrossProfitPercent")
                        .HasColumnType("money");

                    b.Property<bool>("GroupChecked")
                        .HasColumnType("bit");

                    b.Property<double>("GroupReceivePercent")
                        .HasColumnType("float");

                    b.Property<string>("Guid")
                        .HasColumnType("varchar(50)")
                        .HasComment("添加订单，根据GUID得到 订单的Id")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("IName")
                        .HasColumnName("I_Name")
                        .HasColumnType("varchar(200)")
                        .HasComment("接口：单位名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("IOrderId")
                        .HasColumnName("I_OrderId")
                        .HasColumnType("varchar(100)")
                        .HasComment("接口：订单Id")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('纸质发票')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceContent")
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("发票内容")
                        .HasMaxLength(4000);

                    b.Property<string>("InvoiceInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceName")
                        .HasColumnType("varchar(200)")
                        .HasComment("发票抬头")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceType")
                        .HasColumnType("varchar(50)")
                        .HasComment("发票类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsArchive")
                        .HasColumnType("bit")
                        .HasComment("是否已经归档");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConfirm")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsCopied")
                        .HasColumnType("bit")
                        .HasComment("是否被复制");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("1 删除的订单");

                    b.Property<bool>("IsEmergency")
                        .HasColumnType("bit")
                        .HasComment("是否紧急，1：紧急订单");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("0:草稿 1:正式订单");

                    b.Property<bool>("IsInner")
                        .HasColumnType("bit")
                        .HasComment("1:内部可见，客户端对账不可见，主要用于");

                    b.Property<int>("IsInvoice")
                        .HasColumnType("int")
                        .HasComment("1:开发票；0：不开发票");

                    b.Property<bool?>("IsShowAmountInPrint")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStorage")
                        .HasColumnType("bit")
                        .HasComment("是否已经入库，Member库存管理时使用");

                    b.Property<int>("LogisticsId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.Property<decimal>("NoTaxMoney")
                        .HasColumnType("money");

                    b.Property<decimal>("OrderAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("OrderTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("下单时间");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("订单类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PackageNum")
                        .HasColumnType("int");

                    b.Property<decimal>("PayAmount")
                        .HasColumnType("money");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("付款状态")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PayType")
                        .HasColumnType("varchar(50)")
                        .HasComment("支付方式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("PlanDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("计划配送日期");

                    b.Property<decimal>("Point")
                        .HasColumnType("money")
                        .HasComment("积分");

                    b.Property<int>("PrintNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("PrintTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1900)-(1))-(1))");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseFinishTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PurchaseStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("QuotationStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('未处理')")
                        .HasMaxLength(50);

                    b.Property<int>("RawBranchId")
                        .HasColumnType("int");

                    b.Property<int>("RawOrderId")
                        .HasColumnType("int")
                        .HasComment("原订单Id");

                    b.Property<string>("RealName")
                        .HasColumnType("varchar(50)")
                        .HasComment("收货人姓名")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("RowNum")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int")
                        .HasComment("业务员Id，统计业绩时用");

                    b.Property<int>("SaveNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ServiceFinishTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("StoreFinishTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StoreStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money")
                        .HasComment("订单金额");

                    b.Property<decimal>("TaxMoney")
                        .HasColumnType("money");

                    b.Property<string>("Telphone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ThirdPartyId")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("最近更新时间");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("下单人Id");

                    b.Property<string>("Usercode")
                        .HasColumnName("usercode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .HasName("IX_Orders_GUID");

                    b.HasIndex("BranchId", "CustomerId", "MemberId")
                        .HasName("IX_Orders_1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ERP_API.Models.ParamGather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ParamsName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("PlatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UserBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ParamGather");
                });

            modelBuilder.Entity("ERP_API.Models.PayLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Amount")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LogText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PayLog");
                });

            modelBuilder.Entity("ERP_API.Models.PlatformInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("IProjectId")
                        .HasColumnName("I_ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("PlatformCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PlatformInfo");
                });

            modelBuilder.Entity("ERP_API.Models.PreGoodsPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GoodsId")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsDetailPhoto")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHomeImage")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PreGoodsPhoto");
                });

            modelBuilder.Entity("ERP_API.Models.PreInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerAddress")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBank")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("BuyerBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BuyerTaxNum")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("DistributionType")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal>("InitialAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("money");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceEmail")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceMobile")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceRemark")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Operate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10);

                    b.Property<decimal>("PreInvoiceAmount")
                        .HasColumnType("money");

                    b.Property<string>("SaleAddress")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("SaleBank")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SaleBankAccount")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SaleName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SalePhone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SaleTaxNum")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PreInvoice");
                });

            modelBuilder.Entity("ERP_API.Models.PrintTempletDic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Tag")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Vuale")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PrintTempletDic");
                });

            modelBuilder.Entity("ERP_API.Models.ProGoodsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DefaultSource")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DefaultUnit")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsLeaf")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsVisible")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .IsRequired()
                        .HasColumnName("PCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PointRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("PriceArea")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Py")
                        .HasColumnName("PY")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("ProGoodsType");
                });

            modelBuilder.Entity("ERP_API.Models.ProductGoodsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("DonvvTypeId")
                        .HasColumnType("int")
                        .HasComment("Donvv产品库的商品分类Id");

                    b.Property<string>("DonvvTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("Donvv产品库的商品分类名称")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Product_GoodsType");
                });

            modelBuilder.Entity("ERP_API.Models.ProductInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<string>("Params")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Product_Info");
                });

            modelBuilder.Entity("ERP_API.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('2017-04-17')");

                    b.Property<int>("AddUserId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money");

                    b.Property<DateTime?>("EstimateRecieveDate")
                        .HasColumnType("datetime")
                        .HasComment("预计到货时间或者预计收货时间");

                    b.Property<bool>("IsBrandPurchase")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit")
                        .HasComment("是否对账");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMerge")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("NeedToPurchaseId")
                        .HasColumnType("int")
                        .HasComment("采购汇总单Id");

                    b.Property<decimal>("NoTaxMoney")
                        .HasColumnType("money");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("付款状态")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PurchaseType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("PutInStoreTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('1900-1-1')");

                    b.Property<int>("ReceiptUserId")
                        .HasColumnType("int")
                        .HasComment("收货员Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("SaveNum")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasComment("供应商反馈状态")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("TaxMoney")
                        .HasColumnType("money");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("生成采购单人员的Id");

                    b.HasKey("Id");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("ERP_API.Models.PurchaseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal>("BillsPrice")
                        .HasColumnType("money")
                        .HasComment("开单价");

                    b.Property<DateTime>("DelayDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DetailMemo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("DonvvBrandId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DonvvBrandName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<decimal>("InPrice")
                        .HasColumnType("money")
                        .HasComment("换算后的进价");

                    b.Property<string>("InvoiceType")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<bool>("IsCustomGoods")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDonvvSupply")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmergency")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGift")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTotalAmount")
                        .HasColumnType("bit");

                    b.Property<decimal>("NoTaxAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("NoTaxInPrice")
                        .HasColumnType("money");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("OldPurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseStatus")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ReceivedNum")
                        .HasColumnType("int");

                    b.Property<int>("RefundNum")
                        .HasColumnType("int");

                    b.Property<int>("SupplierNum")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseId")
                        .HasName("I_PurchaseId");

                    b.HasIndex("GoodsId", "PurchaseId")
                        .IsUnique()
                        .HasName("IX_PurchaseDetail");

                    b.ToTable("PurchaseDetail");
                });

            modelBuilder.Entity("ERP_API.Models.PurchaseLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsInner")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.Property<string>("Operate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PurchaseType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseId")
                        .HasName("IX_PurchaseLog");

                    b.ToTable("PurchaseLog");
                });

            modelBuilder.Entity("ERP_API.Models.PurchaseMerge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FinalPurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("NeedToPurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PurchaseMerge");
                });

            modelBuilder.Entity("ERP_API.Models.PurchaseModify", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.Property<decimal>("NewNoTaxPrice")
                        .HasColumnType("money");

                    b.Property<int>("NewNum")
                        .HasColumnType("int");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("NewTaxRate")
                        .HasColumnType("money");

                    b.Property<decimal>("OldNoTaxPrice")
                        .HasColumnType("money");

                    b.Property<int>("OldNum")
                        .HasColumnType("int");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("OldTaxRate")
                        .HasColumnType("money");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseId")
                        .HasName("IX_PurchaseModify");

                    b.ToTable("PurchaseModify");
                });

            modelBuilder.Entity("ERP_API.Models.PurchasePay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("PayAccount")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("PayDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("PayMoney")
                        .HasColumnType("money");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("全额付款，部分付款，补足余款，优惠付款")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PrepaymentId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseStatementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PurchasePay");
                });

            modelBuilder.Entity("ERP_API.Models.PurchasePayDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("明细实收金额");

                    b.Property<decimal>("ChargeOffAmount")
                        .HasColumnType("money")
                        .HasComment("明细销账金额");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<decimal>("InPrice")
                        .HasColumnType("money");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("PayId")
                        .HasColumnType("int")
                        .HasComment("采购付款记录表Id");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PurchasePayDetail");
                });

            modelBuilder.Entity("ERP_API.Models.PurchaseQuote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("主键")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("租户编号");

                    b.Property<string>("DonvvBrandId")
                        .HasColumnType("varchar(50)")
                        .HasComment("品牌库品牌编号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DonvvBrandName")
                        .HasColumnType("varchar(100)")
                        .HasComment("品牌库品牌名称")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("DonvvSupplierId")
                        .HasColumnType("varchar(50)")
                        .HasComment("品牌库供应商编号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DonvvSupplierName")
                        .HasColumnType("varchar(100)")
                        .HasComment("品牌库供应商名称")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int")
                        .HasComment("采购单号");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('未处理')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("PurchaseQuote");

                    b.HasComment("采购单报价表");
                });

            modelBuilder.Entity("ERP_API.Models.PurchaseQuoteDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("主键")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasComment("金额");

                    b.Property<int>("DonvvSku")
                        .HasColumnName("DonvvSKU")
                        .HasColumnType("int")
                        .HasComment("品牌库商品编号");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int")
                        .HasComment("商品编号");

                    b.Property<int>("Num")
                        .HasColumnType("int")
                        .HasComment("商品数量");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasComment("价格");

                    b.Property<int>("PurchaseQuoteId")
                        .HasColumnType("int")
                        .HasComment("采购报价单号");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("单位")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("PurchaseQuoteDetail");

                    b.HasComment("采购报价单明细");
                });

            modelBuilder.Entity("ERP_API.Models.PurchaseStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("PaidMoney")
                        .HasColumnType("money");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('未付款')")
                        .HasComment("未付款、已付款、部分付款")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId")
                        .HasName("IX_PurchaseStatement");

                    b.ToTable("PurchaseStatement");
                });

            modelBuilder.Entity("ERP_API.Models.PurchaseStatementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseStatementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseId")
                        .IsUnique()
                        .HasName("IX_PurchaseId");

                    b.HasIndex("PurchaseId", "PurchaseStatementId")
                        .HasName("IX_PurchaseStatementDetail");

                    b.ToTable("PurchaseStatementDetail");
                });

            modelBuilder.Entity("ERP_API.Models.Quotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuotationTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ValidDay")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Quotation");
                });

            modelBuilder.Entity("ERP_API.Models.RegisterProtocol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50);

                    b.Property<string>("ProtocolContent")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ProtocolName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RegisterProtocol");
                });

            modelBuilder.Entity("ERP_API.Models.SalesPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.Property<DateTime>("PlanDate")
                        .HasColumnType("date");

                    b.Property<decimal>("PlanMoney")
                        .HasColumnType("money");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<string>("SalesName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SalesPlan");
                });

            modelBuilder.Entity("ERP_API.Models.SalesStoreMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<string>("SalesName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("销售员名称")
                        .HasMaxLength(50);

                    b.Property<int?>("SalesNo")
                        .HasColumnType("int")
                        .HasComment("销售员Id");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasComment("仓库Id");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("仓库名称")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("更新日期");

                    b.HasKey("Id");

                    b.ToTable("SalesStoreMap");
                });

            modelBuilder.Entity("ERP_API.Models.ServiceOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("ApplyUserId")
                        .HasColumnType("int");

                    b.Property<string>("ApplyUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("FlowState")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastPrintTime")
                        .HasColumnType("datetime")
                        .HasComment("上一次/最近一次打印的时间");

                    b.Property<DateTime>("PlantTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("RelationId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<int>("Tenant")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceOrder");
                });

            modelBuilder.Entity("ERP_API.Models.ServiceOrderDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasComment("车辆编号");

                    b.Property<int>("CarUserId")
                        .HasColumnType("int")
                        .HasComment("送货员编号");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)")
                        .HasComment("状态")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ServiceOrderDelivery");
                });

            modelBuilder.Entity("ERP_API.Models.ServiceOrderDeliveryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int")
                        .HasComment("装车编号");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("订单编号");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ServiceOrderDeliveryDetail");
                });

            modelBuilder.Entity("ERP_API.Models.ServiceOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int?>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ServiceOrderDetail");
                });

            modelBuilder.Entity("ERP_API.Models.ServiceOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Item")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceOrderItem");
                });

            modelBuilder.Entity("ERP_API.Models.ServiceOrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ServiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Tenant")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceOrderLog");
                });

            modelBuilder.Entity("ERP_API.Models.ServiceOrderStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceOrderStaff");
                });

            modelBuilder.Entity("ERP_API.Models.SiChuanLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SiChuanLog");
                });

            modelBuilder.Entity("ERP_API.Models.SourceGoods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("SourceBrand")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("抓取商品品牌")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SourceCategory")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("抓取商品分类")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("SourceId")
                        .HasColumnType("int")
                        .HasComment("抓取商品来源");

                    b.Property<string>("SourceMainSku")
                        .HasColumnType("varchar(200)")
                        .HasComment("抓取商品主SKU")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<decimal>("SourcePrice")
                        .HasColumnType("money")
                        .HasComment("抓取商品售价");

                    b.Property<string>("SourceSku")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("抓取商品SKU")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("SpecVals")
                        .HasColumnType("varchar(200)")
                        .HasComment("抓取商品规格信息")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("TargetGoodsId")
                        .HasColumnType("int")
                        .HasComment("目标商品编号");

                    b.Property<int>("TargetParentId")
                        .HasColumnType("int")
                        .HasComment("母商品编号");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasComment("更新时间");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasComment("抓取商品Url")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SourceGoods");
                });

            modelBuilder.Entity("ERP_API.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Place")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId", "Name")
                        .IsUnique()
                        .HasName("IX_Store");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("ERP_API.Models.StoreZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Pcode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PCode")
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('‘’')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("PrintNum")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("StoreId", "Code")
                        .HasName("IX_StoreZone");

                    b.ToTable("StoreZone");
                });

            modelBuilder.Entity("ERP_API.Models.StrategyGrossProfit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int")
                        .HasComment("创建用户");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int")
                        .HasComment("删除用户");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasComment("结束时间");

                    b.Property<int?>("Extend1")
                        .HasColumnType("int")
                        .HasComment("扩展参数");

                    b.Property<string>("Extend2")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("扩展参数")
                        .HasMaxLength(200);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int")
                        .HasComment("修改用户");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("策略名称")
                        .HasMaxLength(50);

                    b.Property<int>("Privilege")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("备注")
                        .HasMaxLength(200);

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasComment("开始时间");

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.Property<int>("Term")
                        .HasColumnType("int")
                        .HasComment("条件  1、开单 2、pc 3、m 4、门店");

                    b.Property<int>("Way")
                        .HasColumnType("int")
                        .HasComment("方式  1、禁止  2、提醒  3、通知  4、审核");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime")
                        .HasName("Index_CreationTime");

                    b.HasIndex("EndTime")
                        .HasName("Index_EndTime");

                    b.HasIndex("StartTime")
                        .HasName("Index_StartTime");

                    b.HasIndex("Tenant")
                        .HasName("Index_Tenant");

                    b.ToTable("Strategy_GrossProfit");

                    b.HasComment("商品毛利策略");
                });

            modelBuilder.Entity("ERP_API.Models.StrategyItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Extend1")
                        .HasColumnType("int")
                        .HasComment("扩展参数");

                    b.Property<decimal?>("Extend2")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("扩展参数");

                    b.Property<string>("Extend3")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("扩展参数")
                        .HasMaxLength(200);

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasComment("明细Id");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("明细名称")
                        .HasMaxLength(200);

                    b.Property<int>("Mode")
                        .HasColumnType("int")
                        .HasComment("模式 包含/排查");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("类型  用户/角色/部门");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("策略规则Id");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .HasName("Index_ItemId");

                    b.HasIndex("TypeId")
                        .HasName("Index_TypeId");

                    b.ToTable("StrategyItem");

                    b.HasComment("策略规则明细");
                });

            modelBuilder.Entity("ERP_API.Models.StrategyOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Extend1")
                        .HasColumnType("int")
                        .HasComment("扩展参数");

                    b.Property<decimal?>("Extend2")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("扩展参数");

                    b.Property<string>("Extend3")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("扩展参数")
                        .HasMaxLength(200);

                    b.Property<decimal?>("MaxAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("界限值-最大值");

                    b.Property<decimal?>("MinAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("界限值-最小值");

                    b.Property<int>("Mode")
                        .HasColumnType("int")
                        .HasComment("无/值/范围/选项");

                    b.Property<decimal?>("RangeAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("界限值");

                    b.Property<int>("StrategyId")
                        .HasColumnType("int")
                        .HasComment("策略Id");

                    b.Property<decimal?>("TargetAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("目标值");

                    b.HasKey("Id");

                    b.HasIndex("StrategyId")
                        .HasName("Index_StrategyId");

                    b.ToTable("StrategyOrigin");

                    b.HasComment("策略明细");
                });

            modelBuilder.Entity("ERP_API.Models.StrategyRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Extend1")
                        .HasColumnType("int")
                        .HasComment("扩展参数");

                    b.Property<string>("Extend2")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("扩展参数")
                        .HasMaxLength(200);

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasComment("明细Id");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("明细名称")
                        .HasMaxLength(200);

                    b.Property<int>("Mode")
                        .HasColumnType("int")
                        .HasComment("模式 包含/排查");

                    b.Property<int>("StrategyId")
                        .HasColumnType("int")
                        .HasComment("策略Id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("类型 类目/品牌//明细");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .HasName("Index_ItemId");

                    b.ToTable("StrategyRange");

                    b.HasComment("策略界限");
                });

            modelBuilder.Entity("ERP_API.Models.StrategyRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Extend1")
                        .HasColumnType("int")
                        .HasComment("扩展参数");

                    b.Property<decimal?>("Extend2")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("扩展参数");

                    b.Property<string>("Extend3")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("扩展参数")
                        .HasMaxLength(200);

                    b.Property<decimal?>("MaxAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("界限值-最大值");

                    b.Property<decimal?>("MinAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("界限值-最小值");

                    b.Property<int>("Mode")
                        .HasColumnType("int")
                        .HasComment("无/值/范围/选项");

                    b.Property<decimal?>("RangeAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("界限值");

                    b.Property<int>("StrategyId")
                        .HasColumnType("int")
                        .HasComment("策略Id");

                    b.Property<decimal?>("TargetAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("目标值");

                    b.HasKey("Id");

                    b.HasIndex("StrategyId")
                        .HasName("Index_StrategyId");

                    b.ToTable("StrategyRule");

                    b.HasComment("策略规则");
                });

            modelBuilder.Entity("ERP_API.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AddUserId")
                        .HasColumnType("int");

                    b.Property<string>("AddUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Attitude")
                        .HasColumnType("varchar(50)")
                        .HasComment("供应商对我们的重视程度")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("DonvvSupplierId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ExpiredPayment")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceType")
                        .HasColumnType("varchar(50)")
                        .HasComment("发票类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsEnable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsPublic")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LinkMan")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MainBrand")
                        .HasColumnType("varchar(200)")
                        .HasComment("主营品牌")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Major")
                        .HasColumnType("varchar(500)")
                        .HasComment("主营业务范围")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasComment("供应商名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("OpeningBank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500);

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('lueSGJZetyySpUndWjMBEg==')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("PayType")
                        .HasColumnType("varchar(50)")
                        .HasComment("结款方式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Py")
                        .HasColumnName("PY")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Qq")
                        .HasColumnName("QQ")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("简称")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SupplierTaxNo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TelPhone")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)")
                        .HasComment("供应商类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("ERP_API.Models.SupplierContacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("DepId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Moblie")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SuppplierId")
                        .HasColumnType("int");

                    b.Property<string>("Telphone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("SupplierContacts");
                });

            modelBuilder.Entity("ERP_API.Models.SupplierDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Pcode")
                        .IsRequired()
                        .HasColumnName("PCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("SupplierDepartment");
                });

            modelBuilder.Entity("ERP_API.Models.SupplierInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("收供应商发票表主键，自增ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("懂微SAAS平台用户ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')")
                        .HasComment("发票内容");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasComment("发票代码")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceCompany")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime")
                        .HasComment("发票开票日期");

                    b.Property<decimal>("InvoiceMoney")
                        .HasColumnType("money")
                        .HasComment("发票金额");

                    b.Property<string>("InvoiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasComment("发票抬头")
                        .HasMaxLength(500);

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票号码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("发票类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注")
                        .HasMaxLength(500);

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("datetime")
                        .HasComment("收到发票日期，默认系统录入时间");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasComment("供应商ID");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("保存收票信息系统时间");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("操作者ID");

                    b.HasKey("Id");

                    b.ToTable("SupplierInvoice");
                });

            modelBuilder.Entity("ERP_API.Models.SupplierInvoiceDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InPrice")
                        .HasColumnType("money");

                    b.Property<int>("InvoicedNum")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierInvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("ToInvoiceMoney")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("SupplierInvoiceDetails");
                });

            modelBuilder.Entity("ERP_API.Models.SupplierPrepayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActualPayTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money")
                        .HasComment("余额");

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("money")
                        .HasComment("期初金额");

                    b.Property<string>("Memo")
                        .HasColumnType("text")
                        .HasComment("备注");

                    b.Property<string>("Operate")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("操作(预付、付款、撤销)")
                        .HasMaxLength(10);

                    b.Property<int>("OperatorId")
                        .HasColumnType("int")
                        .HasComment("操作人Id");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("操作人名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PayAccount")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PayType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Payment")
                        .HasColumnType("money")
                        .HasComment("付款金额");

                    b.Property<decimal>("Prepayment")
                        .HasColumnType("money")
                        .HasComment("预付金额");

                    b.Property<int>("PurchaseStatementId")
                        .HasColumnType("int")
                        .HasComment("对账单Id");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasComment("供应商Id");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("供应商名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("SupplierPrepayment");
                });

            modelBuilder.Entity("ERP_API.Models.SupplierSettleAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("供应商结账表主键，自增ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("money")
                        .HasComment("余额（可手工调整）=上次余额+区间付款金额-区间收发票金额");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("懂微SAAS平台用户ID");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("money")
                        .HasComment("区间收发票金额");

                    b.Property<decimal>("LastTimeBalance")
                        .HasColumnType("money")
                        .HasComment("上次结账的余额");

                    b.Property<DateTime>("LastTimeSadate")
                        .HasColumnName("LastTimeSADate")
                        .HasColumnType("datetime")
                        .HasComment("上一次结账截止时间，若为第一次结账，则值为1900-1-1");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注")
                        .HasMaxLength(500);

                    b.Property<decimal>("PurchaseAmount")
                        .HasColumnType("money")
                        .HasComment("区间采购金额");

                    b.Property<decimal>("PurchasePayAmount")
                        .HasColumnType("money")
                        .HasComment("区间付款金额");

                    b.Property<DateTime>("SettleAccountDate")
                        .HasColumnType("datetime")
                        .HasComment("结账截止时间");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasComment("供应商ID");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("保存结账信息时的系统时间");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("操作者ID");

                    b.HasKey("Id");

                    b.ToTable("SupplierSettleAccounts");
                });

            modelBuilder.Entity("ERP_API.Models.SurveysFeedBack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opinion")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Satisfaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("SurveysFeedBack");
                });

            modelBuilder.Entity("ERP_API.Models.SysAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcountNo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Bank")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("LinkMan")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasComment("推荐代理商Id，预备以后多级提成制度");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Telphone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("IX_Sys_Agent");

                    b.ToTable("Sys_Agent");
                });

            modelBuilder.Entity("ERP_API.Models.SysAgentUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Telphone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_Agent_Users");
                });

            modelBuilder.Entity("ERP_API.Models.SysApprove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApproveAccount")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ApproveAt")
                        .HasColumnType("datetime");

                    b.Property<string>("ApproveCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ApproveCount")
                        .HasColumnType("int");

                    b.Property<string>("ApproveKey")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ApproveLimit")
                        .HasColumnType("int");

                    b.Property<int?>("ApproveMethod")
                        .HasColumnType("int");

                    b.Property<int?>("ApproveType")
                        .HasColumnType("int");

                    b.Property<bool?>("ApproveValid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_Approve");
                });

            modelBuilder.Entity("ERP_API.Models.SysAuthorize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorizeNum")
                        .HasColumnType("int");

                    b.Property<int>("AuthorizeYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<DateTime>("NewExpiredDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NewUserNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("OldExpiredDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OldUserNum")
                        .HasColumnType("int");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('未付款')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("SysUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_Authorize");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("BranchType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CityAlias")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CitySort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Domain2")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("DonvvDomain")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("ExpiredDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("截止有效期：过期后系统将不能登录");

                    b.Property<string>("Introduction")
                        .HasColumnType("text");

                    b.Property<bool>("IsEasy")
                        .HasColumnType("bit");

                    b.Property<int>("IsEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))")
                        .HasComment("是否有效");

                    b.Property<int>("IsUseSiteGoods")
                        .HasColumnType("int");

                    b.Property<string>("LinkMan")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("分支机构名称")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ProvinceSort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Telphone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("UserNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("IX_Sys_Branch");

                    b.ToTable("Sys_Branch");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ProductTpn")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("IX_Sys_BranchActivity");

                    b.ToTable("Sys_BranchActivity");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchActivityContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ActivityId")
                        .HasName("IX_ActivityId");

                    b.ToTable("Sys_BranchActivityContent");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchActivityGift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityRuleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int>("GiftNum")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("MaxGiftNum")
                        .HasColumnType("int");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("money");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId")
                        .HasName("IX_ActivityId");

                    b.HasIndex("ActivityRuleId")
                        .HasName("IX_ActivityRuleId");

                    b.HasIndex("GoodsId")
                        .HasName("IX_GoodsId");

                    b.ToTable("Sys_BranchActivityGift");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchActivityRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("ItemCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId")
                        .HasName("IX_ActivityId");

                    b.ToTable("Sys_BranchActivityRange");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchActivityRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("money");

                    b.Property<int>("GiftMaxNum")
                        .HasColumnType("int");

                    b.Property<decimal>("RangeAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId")
                        .HasName("IX_ActivityId");

                    b.ToTable("Sys_BranchActivityRule");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchAds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Href1")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image1")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchAds");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaIndex")
                        .HasColumnType("int");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BackGroundColor")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Href1")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Href2")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Href3")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Href4")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Href5")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Href6")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Href7")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Href8")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image2")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image3")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image4")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image5")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image6")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image7")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image8")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("LeftLayout")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchArea");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchAreaDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((99))");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchAreaDetail");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchAreas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BorderColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Border_color")
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("BorderWidth")
                        .HasColumnName("Border_width")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ColSpace")
                        .HasColumnName("Col_Space")
                        .HasColumnType("int");

                    b.Property<int>("ColWidth")
                        .HasColumnName("Col_Width")
                        .HasColumnType("int");

                    b.Property<int>("Cols")
                        .HasColumnType("int");

                    b.Property<string>("HeaderBackGroundColor")
                        .IsRequired()
                        .HasColumnName("Header_BackGroundColor")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("HeaderFontColor")
                        .IsRequired()
                        .HasColumnName("Header_FontColor")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("HeaderFontSize")
                        .HasColumnName("Header_FontSize")
                        .HasColumnType("int");

                    b.Property<int>("HeaderHeight")
                        .HasColumnName("Header_Height")
                        .HasColumnType("int");

                    b.Property<bool?>("IsEnable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsShowHeader")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("RowHeight")
                        .HasColumnName("Row_Height")
                        .HasColumnType("int");

                    b.Property<int>("RowSpace")
                        .HasColumnName("Row_Space")
                        .HasColumnType("int");

                    b.Property<int>("Rows")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId", "Name")
                        .HasName("IX_Sys_BranchAreas");

                    b.ToTable("Sys_BranchAreas");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchAuth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AppKey")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("AppSecret")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<long?>("ExpiresTime")
                        .HasColumnType("bigint");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchAuth");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchBankInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasComment("户名（公司名称）")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Balance")
                        .HasColumnType("money");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasComment("开户行")
                        .HasMaxLength(100);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchBankInfo");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchCss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CssId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_Branch_CSS");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchEmailSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("发信邮箱地址")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit")
                        .HasComment("是否检验邮箱");

                    b.Property<bool>("IsEnableSsl")
                        .HasColumnName("IsEnableSSL")
                        .HasColumnType("bit")
                        .HasComment("是否使用安全链接（SSL）");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasComment("发信人昵称")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("登录密码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Smtpserver")
                        .IsRequired()
                        .HasColumnName("SMTPServer")
                        .HasColumnType("varchar(50)")
                        .HasComment("发信服务器")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("登录账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchEmailSetting");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchErpsetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Erpname")
                        .IsRequired()
                        .HasColumnName("ERPName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("IconUrl")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchERPSetting");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AutoSub")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("BackGroundColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("FloorIndex")
                        .HasColumnType("int");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Href1")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Href2")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Href3")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image2")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Image3")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool>("IsDisplayCustomerTypeAndGoods")
                        .HasColumnType("bit");

                    b.Property<string>("LeftLayout")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("左侧广告位布局，枚举：整体、上下、上左右")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchFloor");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchFloorBrandingWall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("BranchFloorId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ColumnsNum")
                        .HasColumnType("int");

                    b.Property<int>("ColumnsSpace")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchFloorBrandingWall");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchFloorBrandingWallPhotos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("BranchFloorId")
                        .HasColumnType("int");

                    b.Property<string>("ImgHref")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchFloorBrandingWallPhotos");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchFloorDisplayType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BranchFloorId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("GoodsSort")
                        .HasColumnType("int");

                    b.Property<int>("TypeSort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchFloorDisplayType");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchGoodsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsFloor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("是否需要在楼层中显示数据");

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))")
                        .HasComment("首页大类和Floor中的显示顺序");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("商品类别ID");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchGoodsType");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchHelp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchHelp");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchHelpContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("HelpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchHelpContent");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchHelpGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit")
                        .HasComment("是否锁定，锁定后不允许修改");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchHelpGroup");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchHelpGroupPrivateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("帮助文件一级分类的自定义名")
                        .HasMaxLength(50);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("帮助文件一级分类Id");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("bit")
                        .HasComment("是否禁用");

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((99))")
                        .HasComment("排序");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchHelpGroupPrivateInfo");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchHelpPrivateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("帮助文件一级分类的自定义名")
                        .HasMaxLength(50);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("HelpId")
                        .HasColumnType("int")
                        .HasComment("帮助文件二级分类Id");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("bit")
                        .HasComment("是否禁用");

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((99))")
                        .HasComment("排序");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchHelpPrivateInfo");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchHotWords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("HotWords")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Href")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchHotWords");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchPay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AppId")
                        .HasColumnType("varchar(500)")
                        .HasComment("账号")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("AppSecret")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("BizType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CertFileUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("PartnerId")
                        .HasColumnType("varchar(500)")
                        .HasComment("合作者ID")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("PublicKey")
                        .HasColumnName("Public_key")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("Secret")
                        .HasColumnType("varchar(3000)")
                        .HasComment("应用秘钥")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<int?>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((99))");

                    b.Property<string>("SslcertPath")
                        .HasColumnName("Sslcert_path")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchPay");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApiPath")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ImgUrl")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int?>("IsOk")
                        .HasColumnType("int");

                    b.Property<string>("NotifyUrl")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<decimal?>("PoundageAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("PoundageType")
                        .HasColumnType("int");

                    b.Property<string>("RedirectUrl")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnUrl")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int?>("SortId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchPayment");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchSeo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("SEO代码")
                        .HasMaxLength(2000);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("描述")
                        .HasMaxLength(200);

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("关键字")
                        .HasMaxLength(200);

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("标题")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchSeo");

                    b.HasComment("站点seo");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchServicePromise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ColWidth")
                        .HasColumnName("Col_Width")
                        .HasColumnType("int");

                    b.Property<int>("Cols")
                        .HasColumnType("int");

                    b.Property<int>("RowHeight")
                        .HasColumnName("Row_Height")
                        .HasColumnType("int");

                    b.Property<int>("Rows")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchServicePromise");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchServicePromiseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("PromiseId")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchServicePromiseDetail");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("是否显示虚拟销量，用于")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountPeriodLimitOrder")
                        .HasColumnType("int");

                    b.Property<bool>("AddThirdPartyId")
                        .HasColumnType("bit");

                    b.Property<bool>("AutoAuditing")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchIdOfHideMoney")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool?>("BranchSite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("Canvass")
                        .HasColumnType("bit");

                    b.Property<int>("CustomerManageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("('0')");

                    b.Property<bool?>("CustomerNeedApprove")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("ExportByAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinanceAudit")
                        .HasColumnType("bit");

                    b.Property<bool>("GoodsCategory")
                        .HasColumnType("bit");

                    b.Property<bool>("GoodsDetailDisplayInventory")
                        .HasColumnType("bit");

                    b.Property<bool>("GoodsListRandom")
                        .HasColumnType("bit");

                    b.Property<bool>("GroupCheckedAllOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("HidePurchaseZero")
                        .HasColumnType("bit");

                    b.Property<bool>("HideSaleNum")
                        .HasColumnType("bit");

                    b.Property<bool?>("InPriceHigherThanPrice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAccountVialid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomMessageSignature")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomerDetails")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultStore")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('0')");

                    b.Property<bool>("IsHideGoodsEvaluate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRepeatGoodsSn")
                        .HasColumnName("IsRepeatGoodsSN")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShowGoodsSaleCount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowGrossProfit")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShowInvalidPurchaser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsThird")
                        .HasColumnType("bit");

                    b.Property<bool?>("LimitOrderForNoStock")
                        .HasColumnType("bit");

                    b.Property<int?>("LimitWebOrderForNoVirtualStock")
                        .HasColumnType("int");

                    b.Property<bool?>("ModifyGoodsUnit")
                        .HasColumnType("bit");

                    b.Property<bool?>("OnlyMallOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderConfirmGift")
                        .HasColumnName("OrderConfirm_Gift")
                        .HasColumnType("bit")
                        .HasComment("订单审核：赠品模式时  1 开启此功能 0 不开启此功能");

                    b.Property<bool>("OrderConfirmPriceLessInPrice")
                        .HasColumnName("OrderConfirm_PriceLessInPrice")
                        .HasColumnType("bit")
                        .HasComment("订单审核：销售开单售价低于进价时 1 开启此功能 0 不开启此功能");

                    b.Property<bool?>("OrderConfirmReturnDirectDelivery")
                        .HasColumnName("OrderConfirm_ReturnDirectDelivery")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OrderDefaultTaxRate")
                        .HasColumnType("money");

                    b.Property<bool?>("OrderRequiredMemo")
                        .HasColumnType("bit");

                    b.Property<bool?>("OrderToDistribution")
                        .HasColumnType("bit")
                        .HasComment("销售单转分销单");

                    b.Property<bool>("PurchaseByOwin")
                        .HasColumnType("bit");

                    b.Property<bool?>("PurchaseCollectByStore")
                        .HasColumnType("bit");

                    b.Property<int>("PurchaseCollectDefaultPurchaser")
                        .HasColumnName("PurchaseCollect_DefaultPurchaser")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseDefaultTaxRate")
                        .HasColumnType("money");

                    b.Property<bool>("ReturnOrderInStoreForCheck")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowVirtualSales")
                        .HasColumnType("bit");

                    b.Property<bool>("SingleStroe")
                        .HasColumnType("bit");

                    b.Property<bool>("SpecifySupplier")
                        .HasColumnType("bit")
                        .HasComment("高级设置：汇总开单的时候，是否必须指定供应商，默认为否，");

                    b.Property<bool>("StoreOrderSpecifySalesman")
                        .HasColumnType("bit");

                    b.Property<bool>("StoreOrderSpicifyInventory")
                        .HasColumnType("bit");

                    b.Property<bool?>("StoreOrderUsePrice")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchSetting");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchSiteFooter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Tenant")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchSiteFooter");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchSiteSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(300)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CompanyTelphone")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ContactImage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("HtmlValidate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("IcpNo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ICP_No")
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("IsShowSubGoods")
                        .HasColumnType("bit");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Qq")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QQ")
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Qrcode")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SubTelphone")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Telphone")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("UseGoodsTypes")
                        .HasColumnType("bit")
                        .HasComment("是否启用自选商品分类");

                    b.Property<bool>("UseQqcustomer")
                        .HasColumnName("UseQQCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("UseTopMenus")
                        .HasColumnType("bit")
                        .HasComment("是否自选一级菜单");

                    b.Property<string>("VerificationCodeName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchSiteSetting");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchSiteSolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int")
                        .HasComment("创建用户");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int")
                        .HasComment("删除用户");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("图片")
                        .HasMaxLength(200);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int")
                        .HasComment("修改用户");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称")
                        .HasMaxLength(200);

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("备注")
                        .HasMaxLength(200);

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("链接")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("Tenant")
                        .HasName("Index_Tenant");

                    b.ToTable("Sys_BranchSiteSolution");

                    b.HasComment("解决方案");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchTheme");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchThemeArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColSpace")
                        .HasColumnName("Col_Space")
                        .HasColumnType("int");

                    b.Property<int>("ColWidth")
                        .HasColumnName("Col_Width")
                        .HasColumnType("int");

                    b.Property<int>("Cols")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("RowHeight")
                        .HasColumnName("Row_Height")
                        .HasColumnType("int");

                    b.Property<int>("RowSpace")
                        .HasColumnName("Row_Space")
                        .HasColumnType("int");

                    b.Property<int>("Rows")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchThemeArea");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchThemeAreaGoodsTab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowHead")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SearchType")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("TabHref")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("ThemeAreaId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchThemeAreaGoodsTab");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchThemeAreaPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("ImgHref")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("ThemeAreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchThemeAreaPhoto");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchThirdParty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("PK")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称")
                        .HasMaxLength(200);

                    b.Property<int>("Tenant")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchThirdParty");

                    b.HasComment("第三方入驻");
                });

            modelBuilder.Entity("ERP_API.Models.SysBranchTopMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBlank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Url")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Sys_BranchTopMenu");
                });

            modelBuilder.Entity("ERP_API.Models.SysCanvassAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DeleterUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Tenant")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sys_CanvassAgreement");
                });

            modelBuilder.Entity("ERP_API.Models.SysCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsEnable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId", "Plate")
                        .IsUnique()
                        .HasName("IX_Sys_Car");

                    b.ToTable("Sys_Car");
                });

            modelBuilder.Entity("ERP_API.Models.SysCarLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<decimal>("Kil")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("里程");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("Oil")
                        .HasColumnType("decimal(18, 2)")
                        .HasComment("加油量");

                    b.Property<decimal>("OilMoney")
                        .HasColumnType("money")
                        .HasComment("加油金额");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_CarLog");
                });

            modelBuilder.Entity("ERP_API.Models.SysCarUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId", "UserId")
                        .HasName("IX_Sys_CarUser");

                    b.ToTable("Sys_CarUser");
                });

            modelBuilder.Entity("ERP_API.Models.SysCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Level")
                        .HasColumnName("level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .HasColumnName("PCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Sys_City");
                });

            modelBuilder.Entity("ERP_API.Models.SysConfig", b =>
                {
                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("租户");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasComment("值")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.ToTable("Sys_Config");

                    b.HasComment("系统配置表");
                });

            modelBuilder.Entity("ERP_API.Models.SysDept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("所属分支机构");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('0')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("部门名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PCode")
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('0')")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId")
                        .HasName("IX_Sys_Dept");

                    b.ToTable("Sys_Dept");
                });

            modelBuilder.Entity("ERP_API.Models.SysDictionary", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("主键ID");

                    b.Property<string>("CreateName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("创建人")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("编码描述说明")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("EnglishName")
                        .HasColumnType("varchar(50)")
                        .HasComment("编码英文")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasComment("是否默认");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("编码名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasComment("上级编号");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("编码顺序");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasComment("编码类型Id");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("类型名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Sys_Dictionary");

                    b.HasComment("编码");
                });

            modelBuilder.Entity("ERP_API.Models.SysDictionaryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("主键ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("创建人")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("类型描述说明")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("类型名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("类型顺序");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("修改时间");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("IX_Sys_DictionaryType");

                    b.ToTable("Sys_DictionaryType");

                    b.HasComment("编码类型");
                });

            modelBuilder.Entity("ERP_API.Models.SysDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("分销集团Id");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasComment("层级");

                    b.Property<double>("ParentReceiveRate")
                        .HasColumnType("float")
                        .HasComment("上级公司抽成比例");

                    b.Property<int>("PbranchId")
                        .HasColumnName("PBranchId")
                        .HasColumnType("int")
                        .HasComment("父BranchId");

                    b.Property<int>("TopBranchId")
                        .HasColumnType("int")
                        .HasComment("第一级BranchId");

                    b.HasKey("Id");

                    b.ToTable("Sys_Distribution");
                });

            modelBuilder.Entity("ERP_API.Models.SysDistributionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("分销集团名称")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("TopBranchId")
                        .HasColumnType("int")
                        .HasComment("第一级BranchId");

                    b.HasKey("Id");

                    b.ToTable("Sys_DistributionGroup");
                });

            modelBuilder.Entity("ERP_API.Models.SysErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<string>("RelationId")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TableName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_ErrorLog");
                });

            modelBuilder.Entity("ERP_API.Models.SysGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDistribuionGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("LeaderBranchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("UserNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_Group");
                });

            modelBuilder.Entity("ERP_API.Models.SysGroupBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsGroupAccount")
                        .HasColumnType("bit");

                    b.Property<string>("JoinType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId", "GroupId")
                        .IsUnique()
                        .HasName("IX_Sys_GroupBranch");

                    b.ToTable("Sys_GroupBranch");
                });

            modelBuilder.Entity("ERP_API.Models.SysGroupLoginSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyBgColor")
                        .IsRequired()
                        .HasColumnName("body_bg_color")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("FooterBgColor")
                        .IsRequired()
                        .HasColumnName("footer_bg_color")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FooterColor")
                        .IsRequired()
                        .HasColumnName("footer_color")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("FooterHeight")
                        .HasColumnName("footer_height")
                        .HasColumnType("int");

                    b.Property<string>("HeaderBgColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("header_bg_color")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("HeaderBgImg")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("header_bg_img")
                        .HasColumnType("varchar(300)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int>("HeaderHeight")
                        .HasColumnName("header_height")
                        .HasColumnType("int");

                    b.Property<string>("HeaderLogoImg")
                        .IsRequired()
                        .HasColumnName("header_logo_img")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("LoginBgImg")
                        .IsRequired()
                        .HasColumnName("login_bg_img")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LoginBoxBgColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("login_box_bg_color")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("LoginBoxRadius")
                        .HasColumnName("login_box_radius")
                        .HasColumnType("int");

                    b.Property<int>("LoginBoxRight")
                        .HasColumnName("login_box_right")
                        .HasColumnType("int");

                    b.Property<int>("LoginBoxTop")
                        .HasColumnName("login_box_top")
                        .HasColumnType("int");

                    b.Property<int>("LoginHeight")
                        .HasColumnName("login_height")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updatetime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("WrapperBgColor")
                        .IsRequired()
                        .HasColumnName("wrapper_bg_color")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("WrapperBgImg")
                        .IsRequired()
                        .HasColumnName("wrapper_bg_img")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int>("WrapperMinheight")
                        .HasColumnName("wrapper_minheight")
                        .HasColumnType("int");

                    b.Property<int>("WrapperWidth")
                        .HasColumnName("wrapper_width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_GroupLoginSetting");
                });

            modelBuilder.Entity("ERP_API.Models.SysMapiServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AppKey")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("AppSecret")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ExpiresTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("ServerUrl")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Token")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_MapiServer");
                });

            modelBuilder.Entity("ERP_API.Models.SysPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ClientType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('Donvv')")
                        .HasComment("枚举类型ClientType，区分不同的终端")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Controller")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasComment("");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('‘’')")
                        .HasComment("图标文件：Iconfont 编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsBlank")
                        .HasColumnType("bit")
                        .HasComment("1：允许打开多个新页面（例如：销售开单）；0：只能打开一个页面");

                    b.Property<bool?>("IsMenu")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("1:菜单 0：内置权限，例如：销售收款");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Menu")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasComment("要显示的菜单名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))")
                        .HasComment("menu排序");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("");

                    b.HasKey("Id");

                    b.ToTable("Sys_Permission");
                });

            modelBuilder.Entity("ERP_API.Models.SysPermissionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('PC')")
                        .HasComment("PC,PDA,APP")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_PermissionGroup");
                });

            modelBuilder.Entity("ERP_API.Models.SysPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Pirce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1200))")
                        .HasComment("单账号年费用");

                    b.Property<int>("StartAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((5000))")
                        .HasComment("起步售价");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("StartNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((5))")
                        .HasComment("起步账号数量");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_Price");
                });

            modelBuilder.Entity("ERP_API.Models.SysPrintSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("OrderHeader")
                        .HasColumnName("Order_Header")
                        .HasColumnType("varchar(500)")
                        .HasComment("订单打印的页眉")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("OrderInstruction")
                        .HasColumnName("Order_Instruction")
                        .HasColumnType("varchar(500)")
                        .HasComment("底部说明")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("OrderLogoUrl")
                        .HasColumnName("Order_LogoUrl")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int?>("PrintFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_PrintSetting");
                });

            modelBuilder.Entity("ERP_API.Models.SysPrintTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sys_PrintTemplate");
                });

            modelBuilder.Entity("ERP_API.Models.SysPrintValidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ExpiresTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_PrintValidate");
                });

            modelBuilder.Entity("ERP_API.Models.SysRenew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcountNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))")
                        .HasComment("本次续费账号数量");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("date")
                        .HasComment("不包含");

                    b.Property<decimal>("Money")
                        .HasColumnType("money");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("开通、增加")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_Renew");
                });

            modelBuilder.Entity("ERP_API.Models.SysRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("IX_Sys_Role");

                    b.ToTable("Sys_Role");
                });

            modelBuilder.Entity("ERP_API.Models.SysRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_RolePermission");
                });

            modelBuilder.Entity("ERP_API.Models.SysSiteCss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CssFileName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("Css,LayOut")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_SiteCSS");
                });

            modelBuilder.Entity("ERP_API.Models.SysSms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("varchar(500)")
                        .HasComment("短信内容")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(250)")
                        .HasComment("手机号码")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("Smscode")
                        .HasColumnName("SMSCode")
                        .HasColumnType("int")
                        .HasComment(">0 验证码");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Mobile")
                        .HasName("IX_Sys_Sms");

                    b.ToTable("Sys_Sms");
                });

            modelBuilder.Entity("ERP_API.Models.SysUrlLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnName("IP")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_UrlLog");
                });

            modelBuilder.Entity("ERP_API.Models.SysUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId", "UserId")
                        .IsUnique()
                        .HasName("IX_Sys_UserRole");

                    b.ToTable("Sys_UserRole");
                });

            modelBuilder.Entity("ERP_API.Models.SysUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime")
                        .HasComment("生日");

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("DingId")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Idcard")
                        .HasColumnName("IDCard")
                        .HasColumnType("varchar(18)")
                        .HasMaxLength(18)
                        .IsUnicode(false);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheckMobile")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSales")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit")
                        .HasComment("1:有效，0：无效");

                    b.Property<bool>("IsYinLi")
                        .HasColumnType("bit")
                        .HasComment("1：阴历生日");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("date")
                        .HasComment("入职日期");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Position")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Telphone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Token")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("token")
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TokenEndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tokenEndDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Sys_Users");
                });

            modelBuilder.Entity("ERP_API.Models.SystemManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("LoginName")
                        .IsUnique()
                        .HasName("IX_SystemManager");

                    b.ToTable("SystemManager");
                });

            modelBuilder.Entity("ERP_API.Models.TaxCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("AddUserId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryShortName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("DescribeInfo")
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("说明")
                        .HasMaxLength(2000);

                    b.Property<string>("GoodsCategory")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("货物或劳务类别")
                        .HasMaxLength(1000);

                    b.Property<int?>("GoodsTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasComment("是否默认");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("备注")
                        .HasMaxLength(2000);

                    b.Property<string>("TaxCode")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("money")
                        .HasComment("增值税率");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaxCategory");
                });

            modelBuilder.Entity("ERP_API.Models.TaxCategoryGoodsMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int")
                        .HasComment("商品编号");

                    b.Property<int>("TaxCategoryId")
                        .HasColumnType("int")
                        .HasComment("税率分类Id");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("TaxCategoryGoodsMap");
                });

            modelBuilder.Entity("ERP_API.Models.Temp", b =>
                {
                    b.Property<string>("公司名称")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("公司编码")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.ToTable("temp");
                });

            modelBuilder.Entity("ERP_API.Models.ThirdCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnName("categoryName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Source")
                        .HasColumnName("source")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SubCategoryName")
                        .HasColumnName("subCategoryName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("TypeId")
                        .HasColumnName("typeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnName("updateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ThirdCategory");
                });

            modelBuilder.Entity("ERP_API.Models.ThirdPartyGoodsCategoryMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("客户Id");

                    b.Property<int>("LocalGoodsCategoryId")
                        .HasColumnType("int")
                        .HasComment("本地商品分类编码");

                    b.Property<string>("LocalGoodsCategoryName")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("本地商品分类名称")
                        .HasMaxLength(500);

                    b.Property<int>("ThirdPartyGoodsCategoryId")
                        .HasColumnType("int")
                        .HasComment("第三方商品分类编码");

                    b.Property<string>("ThirdPartyGoodsCategoryName")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("第三方商品分类名称")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("ThirdPartyGoodsCategoryMatch");
                });

            modelBuilder.Entity("ERP_API.Models.ThirdPartyGoodsMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnName("BranchID")
                        .HasColumnType("int")
                        .HasComment("客户Id");

                    b.Property<int>("LocalGoodsId")
                        .HasColumnType("int")
                        .HasComment("本地商品id");

                    b.Property<string>("LocalGoodsName")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("本地商品名称")
                        .HasMaxLength(500);

                    b.Property<int>("ThirdPartyGoodsId")
                        .HasColumnType("int")
                        .HasComment("第三方商品Id");

                    b.Property<string>("ThirdPartyGoodsName")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("第三方商品名称")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("ThirdPartyGoodsMatch");
                });

            modelBuilder.Entity("ERP_API.Models.ThirdPartyLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Uuid")
                        .HasColumnName("UUId")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ThirdPartyLogin");
                });

            modelBuilder.Entity("ERP_API.Models.ThirdProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("addTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DetailPhotoNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnName("finishTime")
                        .HasColumnType("datetime");

                    b.Property<int>("GoodsId")
                        .HasColumnName("goodsId")
                        .HasColumnType("int");

                    b.Property<string>("Introduction")
                        .HasColumnName("introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhotoNum")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnName("product_code")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnName("source")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("ThirdProduct");
                });

            modelBuilder.Entity("ERP_API.Models.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int>("InBranchId")
                        .HasColumnType("int");

                    b.Property<string>("InStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("((-1))")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("InStoreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1900)-(1))-(1))");

                    b.Property<int>("InStoreId")
                        .HasColumnType("int");

                    b.Property<int>("InStoreUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LogisticsInfomationId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("OutBranchId")
                        .HasColumnType("int");

                    b.Property<string>("OutStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("OutStoreDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1900)-(1))-(1))");

                    b.Property<int>("OutStoreId")
                        .HasColumnType("int");

                    b.Property<int>("OutStoreUserId")
                        .HasColumnType("int");

                    b.Property<int>("RowNum")
                        .HasColumnType("int");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transfer");
                });

            modelBuilder.Entity("ERP_API.Models.TransferArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllPage")
                        .HasColumnType("int");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("SaveNum")
                        .HasColumnType("int");

                    b.Property<int>("TransferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransferArchive");
                });

            modelBuilder.Entity("ERP_API.Models.TransferBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoxId")
                        .HasColumnType("int");

                    b.Property<int>("PrintNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("PrintTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StoreZone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TransferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("TransferBox");
                });

            modelBuilder.Entity("ERP_API.Models.TransferDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CarUserId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("StockOutUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("TransferDelivery");
                });

            modelBuilder.Entity("ERP_API.Models.TransferDeliveryBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("TransferBoxId")
                        .HasColumnType("int");

                    b.Property<int>("TransferDeliveryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("TransferDeliveryBox");
                });

            modelBuilder.Entity("ERP_API.Models.TransferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("PickNum")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ReceivedNum")
                        .HasColumnType("int");

                    b.Property<string>("ReceivedStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SingleRemark")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("TransferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId", "TransferId")
                        .IsUnique()
                        .HasName("IX_TransferDetail");

                    b.ToTable("TransferDetail");
                });

            modelBuilder.Entity("ERP_API.Models.TransferLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsInner")
                        .HasColumnType("bit")
                        .HasComment("1:内部可见；0：客户可见");

                    b.Property<string>("Operate")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasComment("操作")
                        .HasMaxLength(200);

                    b.Property<int>("OperatorId")
                        .HasColumnType("int")
                        .HasComment("操作人Id(Sys_User的Id)");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasComment("操作人名称(Sys_User的Name)")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("调拨单状态")
                        .HasMaxLength(50);

                    b.Property<int>("TransferId")
                        .HasColumnType("int")
                        .HasComment("调拨单号");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("TransferLog");
                });

            modelBuilder.Entity("ERP_API.Models.TransferPicking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistributeUserId")
                        .HasColumnType("int")
                        .HasComment("分单员");

                    b.Property<int>("PickingUserId")
                        .HasColumnType("int")
                        .HasComment("理货员Id");

                    b.Property<int>("TransferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("TransferPicking");
                });

            modelBuilder.Entity("ERP_API.Models.TransferPickingLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int")
                        .HasComment("商品Id");

                    b.Property<int>("Num")
                        .HasColumnType("int")
                        .HasComment("拣货数量");

                    b.Property<int>("PickingUserId")
                        .HasColumnType("int")
                        .HasComment("拣货员Id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasComment("调出仓库Id");

                    b.Property<string>("StoreZone")
                        .IsRequired()
                        .HasColumnType("nchar(100)")
                        .IsFixedLength(true)
                        .HasComment("库位")
                        .HasMaxLength(100);

                    b.Property<int>("TransferDetailId")
                        .HasColumnType("int")
                        .HasComment("调拨单明细ID");

                    b.Property<int>("TransferId")
                        .HasColumnType("int")
                        .HasComment("调拨单号");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("TransferPickingLog");
                });

            modelBuilder.Entity("ERP_API.Models.TransferReceiveMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money")
                        .HasComment("销账金额");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("付款方式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ReceiveMoney")
                        .HasColumnType("money")
                        .HasComment("收款金额");

                    b.Property<int>("TransferStatementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransferReceiveMoney");
                });

            modelBuilder.Entity("ERP_API.Models.TransferStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasComment("调入公司BranchId");

                    b.Property<decimal>("ChargeOff")
                        .HasColumnType("money");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal>("PaidMoney")
                        .HasColumnType("money");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("操作员");

                    b.HasKey("Id");

                    b.ToTable("TransferStatement");
                });

            modelBuilder.Entity("ERP_API.Models.TransferStatementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TransferId")
                        .HasColumnType("int");

                    b.Property<int>("TransferStatementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransferStatementDetail");
                });

            modelBuilder.Entity("ERP_API.Models.Vipapply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<int>("ConfirmLevel")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("EmailForInvoice")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('纸质发票')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceContent")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LogisticsId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("OperatorId")
                        .HasColumnType("int");

                    b.Property<string>("PayType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("money");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("VIPApply");
                });

            modelBuilder.Entity("ERP_API.Models.VipapplyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplyId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayNum")
                        .HasColumnType("int");

                    b.Property<decimal>("DisplayPrice")
                        .HasColumnType("money");

                    b.Property<string>("DisplayUnit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0.00))");

                    b.HasKey("Id");

                    b.HasIndex("ApplyId", "GoodsId")
                        .IsUnique()
                        .HasName("IX_VIPApplyDetail");

                    b.ToTable("VIPApplyDetail");
                });

            modelBuilder.Entity("ERP_API.Models.VipapplyInvoiceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasComment("购方地址")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("ApplyId")
                        .HasColumnType("int");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("购方开户行")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("购方开户行账号")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("购方发票内容")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasComment("购方电子邮箱")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(500)")
                        .HasComment("发票备注")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(50)")
                        .HasComment("购方手机号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("购方发票抬头")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("购方注册电话")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TaxNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("购方税号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("发票类型");

                    b.HasKey("Id");

                    b.ToTable("VIPApplyInvoiceInfo");
                });

            modelBuilder.Entity("ERP_API.Models.VipapplyLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id，主键")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplyId")
                        .HasColumnType("int")
                        .HasComment("申请单Id");

                    b.Property<int>("ApplyUserId")
                        .HasColumnType("int")
                        .HasComment("申请人Id(MemberId)");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注")
                        .HasMaxLength(500);

                    b.Property<string>("OperateStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("操作状态（待审核，已审核，已驳回）")
                        .HasMaxLength(10);

                    b.Property<int>("OperatorId")
                        .HasColumnType("int")
                        .HasComment("操作人Id(MemberId)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("VIPApplyLog");
                });

            modelBuilder.Entity("ERP_API.Models.VipapplyModify", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplyId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("NewNum")
                        .HasColumnType("int");

                    b.Property<int>("OldNum")
                        .HasColumnType("int");

                    b.Property<int>("OperaterId")
                        .HasColumnType("int")
                        .HasComment("修改人的MemberId");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("ApplyId")
                        .HasName("IX_VIPApplyModify");

                    b.ToTable("VIPApplyModify");
                });

            modelBuilder.Entity("ERP_API.Models.Vipcounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("CustomerNum")
                        .HasColumnType("int");

                    b.Property<int>("GoodsNum")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId", "Name")
                        .IsUnique()
                        .HasName("IX_VIPCounter");

                    b.ToTable("VIPCounter");
                });

            modelBuilder.Entity("ERP_API.Models.VipcounterCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CounterId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("CounterId", "CustomerId")
                        .IsUnique()
                        .HasName("IX_VIPCounterCustomer");

                    b.ToTable("VIPCounterCustomer");
                });

            modelBuilder.Entity("ERP_API.Models.VipcounterDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CounterId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsSales")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))")
                        .HasComment("是否在售");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("Vipprice")
                        .HasColumnName("VIPPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CounterId", "GoodsId")
                        .IsUnique()
                        .HasName("IX_VIPCounterDetail");

                    b.ToTable("VIPCounterDetail");
                });

            modelBuilder.Entity("ERP_API.Models.VirtualInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VirtualInventory");
                });

            modelBuilder.Entity("ERP_API.Models.YangCaiOrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogText")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReceiptAmount")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("ReceiptCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("YangCaiOrderLog");
                });

            modelBuilder.Entity("ERP_API.Models.SysDictionary", b =>
                {
                    b.HasOne("ERP_API.Models.SysDictionaryType", "Type")
                        .WithMany("SysDictionary")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_SYS_DICT_Relation_SYS_DICT")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
